@font-face {
  font-family: "MIXOfont";
  src: url("../font/MIXOfont.woff2");
}

.keen-slider:not([data-keen-slider-disabled]) {
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
  align-content: flex-start;
  display: flex;
  overflow: hidden;
  position: relative;
  touch-action: pan-y;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -khtml-user-select: none;
  width: 100%;
}
.keen-slider:not([data-keen-slider-disabled]) .keen-slider__slide {
  min-height: 100%;
  overflow: hidden;
  position: relative;
  width: 100%;
}
:root {
  --f-transition-duration: 0.6s;
  --f-button-svg-fill: white;
  --font-mixofont: "MIXOfont", "Adjusted Arial Black Fallback", "sans-serif";
}
@media (width>=639px) {
  .f-button svg.fancybox-custom-nav {
    display: block;
    fill: #fff;
    width: 50px;
    height: 50px;
  }
}
.swiper {
  max-height: 100%;
  width: 100%;
  height: 100%;
  overflow: hidden;
}
.swiper-slide {
  cursor: pointer;
  width: 100% !important;
  height: 100% !important;
}
.hero-slideshow-control {
  position: absolute;
  top: 50%;
  z-index: 99;
  transform: translateY(-50%);
}
:root {
  --mixo-pink: #e04270;
  --mixo-black: #000;
  --mixo-green: #20e4bd;
  --mixo-slate: #263340;
  --mixo-gray: #b3b3b3;
  /* --home-section-gradient: linear-gradient(45deg, #e0426f, #e0426f); */
  --home-section-gradient: linear-gradient(
    45deg,
    hsl(210, 25%, 20%),
    hsl(209, 25%, 30%)
  );
  --hero-image-shadow-color: transparent;
  --hero-image-shadow-color: hsl(210, 25%, 52%);
  --hero-text-shadow-color: hsla(0 0 100/50%);
  --home-transition: 0.55s ease;
}
.home-section {
  background: var(--home-section-gradient);
}
.home-transition {
  transition: all var(--home-transition);
}
.cta {
  overflow: hidden;
  position: relative;
  transition: all var(--home-transition);
  align-items: center;
  justify-content: center;
  display: inline-flex;
  text-transform: capitalize;
  font-weight: 700;
  border: 2px solid var(--color-accent);
  padding: calc(var(--spacing) * 2) calc(var(--spacing) * 4);
  font-size: var(--text-xl);
}
.txt-shadow {
  animation: 1.4s ease-in forwards hero-txt-reveal;
}
.logos-bg {
  background-image: url(/assets/bg-logos.svg);
}
.collapse {
  border-radius: 0;
}
.home-carousel-icon svg {
  fill: var(--color-accent);
}
.home-carousel-icon-selected svg {
  fill: var(--color-secondary);
  stroke: var(--color-secondary);
}
@keyframes hero-img-reveal {
  0% {
    box-shadow: 0 -20px 365px 5px #0000;
  }
  to {
    box-shadow: 0 -20px 365px 5px var(--hero-image-shadow-color);
  }
}
@keyframes hero-txt-reveal {
  0% {
    filter: drop-shadow(10px 0 37px #0000);
  }
  to {
    filter: drop-shadow(10px 0px 37px var(--hero-text-shadow-color));
  }
}
.hero-img {
  animation: 1.4s ease-in forwards hero-img-reveal;
}
.cloud-options-graphic {
  fill: none;
  stroke: none;
}
.embed-container {
  position: relative;
  padding-bottom: 56.25%;
  height: 0;
  overflow: hidden;
  max-width: 100%;
}
.embed-container iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
:root {
  --f-spinner-width: 36px;
  --f-spinner-height: 36px;
  --f-spinner-color-1: #0000001a;
  --f-spinner-color-2: #11181ccc;
  --f-spinner-stroke: 2.75;
}
:root {
  --f-button-width: 40px;
  --f-button-height: 40px;
  --f-button-border: 0;
  --f-button-border-radius: 0;
  --f-button-color: #374151;
  --f-button-bg: #f8f8f8;
  --f-button-hover-bg: #e0e0e0;
  --f-button-active-bg: #d0d0d0;
  --f-button-shadow: none;
  --f-button-transition: all 0.15s ease;
  --f-button-transform: none;
  --f-button-svg-width: 20px;
  --f-button-svg-height: 20px;
  --f-button-svg-stroke-width: 1.5;
  --f-button-svg-fill: none;
  --f-button-svg-filter: none;
  --f-button-svg-disabled-opacity: 0.65;
}
@media (hover: hover) {
  .f-button:hover:not([disabled]) {
    color: var(--f-button-hover-color);
    background-color: var(--f-button-hover-bg);
  }
} /*! tailwindcss v4.0.0 | MIT License | https://tailwindcss.com */
@layer theme {
  :root {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      "Liberation Mono", "Courier New", monospace;
    --color-red-50: oklch(0.971 0.013 17.38);
    --color-red-100: oklch(0.936 0.032 17.717);
    --color-red-200: oklch(0.885 0.062 18.334);
    --color-red-300: oklch(0.808 0.114 19.571);
    --color-red-400: oklch(0.704 0.191 22.216);
    --color-red-500: oklch(0.637 0.237 25.331);
    --color-red-600: oklch(0.577 0.245 27.325);
    --color-red-700: oklch(0.505 0.213 27.518);
    --color-red-800: oklch(0.444 0.177 26.899);
    --color-red-900: oklch(0.396 0.141 25.723);
    --color-red-950: oklch(0.258 0.092 26.042);
    --color-orange-50: oklch(0.98 0.016 73.684);
    --color-orange-100: oklch(0.954 0.038 75.164);
    --color-orange-200: oklch(0.901 0.076 70.697);
    --color-orange-300: oklch(0.837 0.128 66.29);
    --color-orange-400: oklch(0.75 0.183 55.934);
    --color-orange-500: oklch(0.705 0.213 47.604);
    --color-orange-600: oklch(0.646 0.222 41.116);
    --color-orange-700: oklch(0.553 0.195 38.402);
    --color-orange-800: oklch(0.47 0.157 37.304);
    --color-orange-900: oklch(0.408 0.123 38.172);
    --color-orange-950: oklch(0.266 0.079 36.259);
    --color-amber-50: oklch(0.987 0.022 95.277);
    --color-amber-100: oklch(0.962 0.059 95.617);
    --color-amber-200: oklch(0.924 0.12 95.746);
    --color-amber-300: oklch(0.879 0.169 91.605);
    --color-amber-400: oklch(0.828 0.189 84.429);
    --color-amber-500: oklch(0.769 0.188 70.08);
    --color-amber-600: oklch(0.666 0.179 58.318);
    --color-amber-700: oklch(0.555 0.163 48.998);
    --color-amber-800: oklch(0.473 0.137 46.201);
    --color-amber-900: oklch(0.414 0.112 45.904);
    --color-amber-950: oklch(0.279 0.077 45.635);
    --color-yellow-50: oklch(0.987 0.026 102.212);
    --color-yellow-100: oklch(0.973 0.071 103.193);
    --color-yellow-200: oklch(0.945 0.129 101.54);
    --color-yellow-300: oklch(0.905 0.182 98.111);
    --color-yellow-400: oklch(0.852 0.199 91.936);
    --color-yellow-500: oklch(0.795 0.184 86.047);
    --color-yellow-600: oklch(0.681 0.162 75.834);
    --color-yellow-700: oklch(0.554 0.135 66.442);
    --color-yellow-800: oklch(0.476 0.114 61.907);
    --color-yellow-900: oklch(0.421 0.095 57.708);
    --color-yellow-950: oklch(0.286 0.066 53.813);
    --color-lime-50: oklch(0.986 0.031 120.757);
    --color-lime-100: oklch(0.967 0.067 122.328);
    --color-lime-200: oklch(0.938 0.127 124.321);
    --color-lime-300: oklch(0.897 0.196 126.665);
    --color-lime-400: oklch(0.841 0.238 128.85);
    --color-lime-500: oklch(0.768 0.233 130.85);
    --color-lime-600: oklch(0.648 0.2 131.684);
    --color-lime-700: oklch(0.532 0.157 131.589);
    --color-lime-800: oklch(0.453 0.124 130.933);
    --color-lime-900: oklch(0.405 0.101 131.063);
    --color-lime-950: oklch(0.274 0.072 132.109);
    --color-green-50: oklch(0.982 0.018 155.826);
    --color-green-100: oklch(0.962 0.044 156.743);
    --color-green-200: oklch(0.925 0.084 155.995);
    --color-green-300: oklch(0.871 0.15 154.449);
    --color-green-400: oklch(0.792 0.209 151.711);
    --color-green-500: oklch(0.723 0.219 149.579);
    --color-green-600: oklch(0.627 0.194 149.214);
    --color-green-700: oklch(0.527 0.154 150.069);
    --color-green-800: oklch(0.448 0.119 151.328);
    --color-green-900: oklch(0.393 0.095 152.535);
    --color-green-950: oklch(0.266 0.065 152.934);
    --color-emerald-50: oklch(0.979 0.021 166.113);
    --color-emerald-100: oklch(0.95 0.052 163.051);
    --color-emerald-200: oklch(0.905 0.093 164.15);
    --color-emerald-300: oklch(0.845 0.143 164.978);
    --color-emerald-400: oklch(0.765 0.177 163.223);
    --color-emerald-500: oklch(0.696 0.17 162.48);
    --color-emerald-600: oklch(0.596 0.145 163.225);
    --color-emerald-700: oklch(0.508 0.118 165.612);
    --color-emerald-800: oklch(0.432 0.095 166.913);
    --color-emerald-900: oklch(0.378 0.077 168.94);
    --color-emerald-950: oklch(0.262 0.051 172.552);
    --color-teal-50: oklch(0.984 0.014 180.72);
    --color-teal-100: oklch(0.953 0.051 180.801);
    --color-teal-200: oklch(0.91 0.096 180.426);
    --color-teal-300: oklch(0.855 0.138 181.071);
    --color-teal-400: oklch(0.777 0.152 181.912);
    --color-teal-500: oklch(0.704 0.14 182.503);
    --color-teal-600: oklch(0.6 0.118 184.704);
    --color-teal-700: oklch(0.511 0.096 186.391);
    --color-teal-800: oklch(0.437 0.078 188.216);
    --color-teal-900: oklch(0.386 0.063 188.416);
    --color-teal-950: oklch(0.277 0.046 192.524);
    --color-cyan-50: oklch(0.984 0.019 200.873);
    --color-cyan-100: oklch(0.956 0.045 203.388);
    --color-cyan-200: oklch(0.917 0.08 205.041);
    --color-cyan-300: oklch(0.865 0.127 207.078);
    --color-cyan-400: oklch(0.789 0.154 211.53);
    --color-cyan-500: oklch(0.715 0.143 215.221);
    --color-cyan-600: oklch(0.609 0.126 221.723);
    --color-cyan-700: oklch(0.52 0.105 223.128);
    --color-cyan-800: oklch(0.45 0.085 224.283);
    --color-cyan-900: oklch(0.398 0.07 227.392);
    --color-cyan-950: oklch(0.302 0.056 229.695);
    --color-sky-50: oklch(0.977 0.013 236.62);
    --color-sky-100: oklch(0.951 0.026 236.824);
    --color-sky-200: oklch(0.901 0.058 230.902);
    --color-sky-300: oklch(0.828 0.111 230.318);
    --color-sky-400: oklch(0.746 0.16 232.661);
    --color-sky-500: oklch(0.685 0.169 237.323);
    --color-sky-600: oklch(0.588 0.158 241.966);
    --color-sky-700: oklch(0.5 0.134 242.749);
    --color-sky-800: oklch(0.443 0.11 240.79);
    --color-sky-900: oklch(0.391 0.09 240.876);
    --color-sky-950: oklch(0.293 0.066 243.157);
    --color-blue-50: oklch(0.97 0.014 254.604);
    --color-blue-100: oklch(0.932 0.032 255.585);
    --color-blue-200: oklch(0.882 0.059 254.128);
    --color-blue-300: oklch(0.809 0.105 251.813);
    --color-blue-400: oklch(0.707 0.165 254.624);
    --color-blue-500: oklch(0.623 0.214 259.815);
    --color-blue-600: oklch(0.546 0.245 262.881);
    --color-blue-700: oklch(0.488 0.243 264.376);
    --color-blue-800: oklch(0.424 0.199 265.638);
    --color-blue-900: oklch(0.379 0.146 265.522);
    --color-blue-950: oklch(0.282 0.091 267.935);
    --color-indigo-50: oklch(0.962 0.018 272.314);
    --color-indigo-100: oklch(0.93 0.034 272.788);
    --color-indigo-200: oklch(0.87 0.065 274.039);
    --color-indigo-300: oklch(0.785 0.115 274.713);
    --color-indigo-400: oklch(0.673 0.182 276.935);
    --color-indigo-500: oklch(0.585 0.233 277.117);
    --color-indigo-600: oklch(0.511 0.262 276.966);
    --color-indigo-700: oklch(0.457 0.24 277.023);
    --color-indigo-800: oklch(0.398 0.195 277.366);
    --color-indigo-900: oklch(0.359 0.144 278.697);
    --color-indigo-950: oklch(0.257 0.09 281.288);
    --color-violet-50: oklch(0.969 0.016 293.756);
    --color-violet-100: oklch(0.943 0.029 294.588);
    --color-violet-200: oklch(0.894 0.057 293.283);
    --color-violet-300: oklch(0.811 0.111 293.571);
    --color-violet-400: oklch(0.702 0.183 293.541);
    --color-violet-500: oklch(0.606 0.25 292.717);
    --color-violet-600: oklch(0.541 0.281 293.009);
    --color-violet-700: oklch(0.491 0.27 292.581);
    --color-violet-800: oklch(0.432 0.232 292.759);
    --color-violet-900: oklch(0.38 0.189 293.745);
    --color-violet-950: oklch(0.283 0.141 291.089);
    --color-purple-50: oklch(0.977 0.014 308.299);
    --color-purple-100: oklch(0.946 0.033 307.174);
    --color-purple-200: oklch(0.902 0.063 306.703);
    --color-purple-300: oklch(0.827 0.119 306.383);
    --color-purple-400: oklch(0.714 0.203 305.504);
    --color-purple-500: oklch(0.627 0.265 303.9);
    --color-purple-600: oklch(0.558 0.288 302.321);
    --color-purple-700: oklch(0.496 0.265 301.924);
    --color-purple-800: oklch(0.438 0.218 303.724);
    --color-purple-900: oklch(0.381 0.176 304.987);
    --color-purple-950: oklch(0.291 0.149 302.717);
    --color-fuchsia-50: oklch(0.977 0.017 320.058);
    --color-fuchsia-100: oklch(0.952 0.037 318.852);
    --color-fuchsia-200: oklch(0.903 0.076 319.62);
    --color-fuchsia-300: oklch(0.833 0.145 321.434);
    --color-fuchsia-400: oklch(0.74 0.238 322.16);
    --color-fuchsia-500: oklch(0.667 0.295 322.15);
    --color-fuchsia-600: oklch(0.591 0.293 322.896);
    --color-fuchsia-700: oklch(0.518 0.253 323.949);
    --color-fuchsia-800: oklch(0.452 0.211 324.591);
    --color-fuchsia-900: oklch(0.401 0.17 325.612);
    --color-fuchsia-950: oklch(0.293 0.136 325.661);
    --color-pink-50: oklch(0.971 0.014 343.198);
    --color-pink-100: oklch(0.948 0.028 342.258);
    --color-pink-200: oklch(0.899 0.061 343.231);
    --color-pink-300: oklch(0.823 0.12 346.018);
    --color-pink-400: oklch(0.718 0.202 349.761);
    --color-pink-500: oklch(0.656 0.241 354.308);
    --color-pink-600: oklch(0.592 0.249 0.584);
    --color-pink-700: oklch(0.525 0.223 3.958);
    --color-pink-800: oklch(0.459 0.187 3.815);
    --color-pink-900: oklch(0.408 0.153 2.432);
    --color-pink-950: oklch(0.284 0.109 3.907);
    --color-rose-50: oklch(0.969 0.015 12.422);
    --color-rose-100: oklch(0.941 0.03 12.58);
    --color-rose-200: oklch(0.892 0.058 10.001);
    --color-rose-300: oklch(0.81 0.117 11.638);
    --color-rose-400: oklch(0.712 0.194 13.428);
    --color-rose-500: oklch(0.645 0.246 16.439);
    --color-rose-600: oklch(0.586 0.253 17.585);
    --color-rose-700: oklch(0.514 0.222 16.935);
    --color-rose-800: oklch(0.455 0.188 13.697);
    --color-rose-900: oklch(0.41 0.159 10.272);
    --color-rose-950: oklch(0.271 0.105 12.094);
    --color-slate-50: oklch(0.984 0.003 247.858);
    --color-slate-100: oklch(0.968 0.007 247.896);
    --color-slate-200: oklch(0.929 0.013 255.508);
    --color-slate-300: oklch(0.869 0.022 252.894);
    --color-slate-400: oklch(0.704 0.04 256.788);
    --color-slate-500: oklch(0.554 0.046 257.417);
    --color-slate-600: oklch(0.446 0.043 257.281);
    --color-slate-700: oklch(0.372 0.044 257.287);
    --color-slate-800: oklch(0.279 0.041 260.031);
    --color-slate-900: oklch(0.208 0.042 265.755);
    --color-slate-950: oklch(0.129 0.042 264.695);
    --color-gray-50: oklch(0.985 0.002 247.839);
    --color-gray-100: oklch(0.967 0.003 264.542);
    --color-gray-200: oklch(0.928 0.006 264.531);
    --color-gray-300: oklch(0.872 0.01 258.338);
    --color-gray-400: oklch(0.707 0.022 261.325);
    --color-gray-500: oklch(0.551 0.027 264.364);
    --color-gray-600: oklch(0.446 0.03 256.802);
    --color-gray-700: oklch(0.373 0.034 259.733);
    --color-gray-800: oklch(0.278 0.033 256.848);
    --color-gray-900: oklch(0.21 0.034 264.665);
    --color-gray-950: oklch(0.13 0.028 261.692);
    --color-zinc-50: oklch(0.985 0 0);
    --color-zinc-100: oklch(0.967 0.001 286.375);
    --color-zinc-200: oklch(0.92 0.004 286.32);
    --color-zinc-300: oklch(0.871 0.006 286.286);
    --color-zinc-400: oklch(0.705 0.015 286.067);
    --color-zinc-500: oklch(0.552 0.016 285.938);
    --color-zinc-600: oklch(0.442 0.017 285.786);
    --color-zinc-700: oklch(0.37 0.013 285.805);
    --color-zinc-800: oklch(0.274 0.006 286.033);
    --color-zinc-900: oklch(0.21 0.006 285.885);
    --color-zinc-950: oklch(0.141 0.005 285.823);
    --color-neutral-50: oklch(0.985 0 0);
    --color-neutral-100: oklch(0.97 0 0);
    --color-neutral-200: oklch(0.922 0 0);
    --color-neutral-300: oklch(0.87 0 0);
    --color-neutral-400: oklch(0.708 0 0);
    --color-neutral-500: oklch(0.556 0 0);
    --color-neutral-600: oklch(0.439 0 0);
    --color-neutral-700: oklch(0.371 0 0);
    --color-neutral-800: oklch(0.269 0 0);
    --color-neutral-900: oklch(0.205 0 0);
    --color-neutral-950: oklch(0.145 0 0);
    --color-stone-50: oklch(0.985 0.001 106.423);
    --color-stone-100: oklch(0.97 0.001 106.424);
    --color-stone-200: oklch(0.923 0.003 48.717);
    --color-stone-300: oklch(0.869 0.005 56.366);
    --color-stone-400: oklch(0.709 0.01 56.259);
    --color-stone-500: oklch(0.553 0.013 58.071);
    --color-stone-600: oklch(0.444 0.011 73.639);
    --color-stone-700: oklch(0.374 0.01 67.558);
    --color-stone-800: oklch(0.268 0.007 34.298);
    --color-stone-900: oklch(0.216 0.006 56.043);
    --color-stone-950: oklch(0.147 0.004 49.25);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-sm: 40rem;
    --breakpoint-md: 48rem;
    --breakpoint-lg: 64rem;
    --breakpoint-xl: 80rem;
    --breakpoint-2xl: 96rem;
    --container-3xs: 16rem;
    --container-2xs: 18rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: 1.5;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: 1.2;
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --text-9xl: 8rem;
    --text-9xl--line-height: 1;
    --font-weight-thin: 100;
    --font-weight-extralight: 200;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --font-weight-black: 900;
    --tracking-tighter: -0.05em;
    --tracking-tight: -0.025em;
    --tracking-normal: 0em;
    --tracking-wide: 0.025em;
    --tracking-wider: 0.05em;
    --tracking-widest: 0.1em;
    --leading-tight: 1.25;
    --leading-snug: 1.375;
    --leading-normal: 1.5;
    --leading-relaxed: 1.625;
    --leading-loose: 2;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --radius-4xl: 2rem;
    --shadow-2xs: 0 1px #0000000d;
    --shadow-xs: 0 1px 2px 0 #0000000d;
    --shadow-sm: 0 1px 3px 0 #0000001a, 0 1px 2px -1px #0000001a;
    --shadow-md: 0 4px 6px -1px #0000001a, 0 2px 4px -2px #0000001a;
    --shadow-lg: 0 10px 15px -3px #0000001a, 0 4px 6px -4px #0000001a;
    --shadow-xl: 0 20px 25px -5px #0000001a, 0 8px 10px -6px #0000001a;
    --shadow-2xl: 0 25px 50px -12px #00000040;
    --inset-shadow-2xs: inset 0 1px #0000000d;
    --inset-shadow-xs: inset 0 1px 1px #0000000d;
    --inset-shadow-sm: inset 0 2px 4px #0000000d;
    --drop-shadow-xs: 0 1px 1px #0000000d;
    --drop-shadow-sm: 0 1px 2px #00000026;
    --drop-shadow-md: 0 3px 3px #0000001f;
    --drop-shadow-lg: 0 4px 4px #00000026;
    --drop-shadow-xl: 0 9px 7px #0000001a;
    --drop-shadow-2xl: 0 25px 25px #00000026;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-xs: 4px;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-lg: 16px;
    --blur-xl: 24px;
    --blur-2xl: 40px;
    --blur-3xl: 64px;
    --perspective-dramatic: 100px;
    --perspective-near: 300px;
    --perspective-normal: 500px;
    --perspective-midrange: 800px;
    --perspective-distant: 1200px;
    --aspect-video: 16/9;
    --default-transition-duration: 0.15s;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(
      --font-sans--font-variation-settings
    );
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(
      --font-mono--font-feature-settings
    );
    --default-mono-font-variation-settings: var(
      --font-mono--font-variation-settings
    );
    --font-mixofont: "MIXOfont", "Adjusted Arial Black Fallback", "sans-serif";
    --font-nunito: "Nunito", "Adjusted Arial Fallback", "sans-serif";
  }
}
@layer base {
  *,
  :after,
  :before,
  ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  html,
  :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(
      --default-font-family,
      ui-sans-serif,
      system-ui,
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      "Segoe UI Symbol",
      "Noto Color Emoji"
    );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: var(
      --default-mono-font-family,
      ui-monospace,
      SFMono-Regular,
      Menlo,
      Monaco,
      Consolas,
      "Liberation Mono",
      "Courier New",
      monospace
    );
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(
      --default-mono-font-variation-settings,
      normal
    );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    vertical-align: middle;
    display: block;
  }
  button,
  input,
  select,
  optgroup,
  textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-inner-spin-button {
    height: auto;
  }
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
  a {
    color: currentColor;
  }
  @media (hover: hover) {
    a:hover {
      color: currentColor;
      text-decoration-line: none;
    }
  }
  h1,
  header {
    font-family: var(--font-mixofont);
  }
  .flex-grow {
    flex-grow: 1;
  }
  svg,
  g,
  .votes path {
    fill: var(--color-accent);
    stroke: var(--color-accent);
  }
  footer svg,
  #download svg {
    fill: var(--color-primary);
    stroke: var(--color-primary);
  }
  .logo-item:hover svg {
    fill: var(--color-secondary);
    stroke: var(--color-secondary);
  }
  :where(
      .menu
        li:not(.menu-title):not(.disabled)
        > :not(ul):not(details):not(.menu-title)
    ):not(.active):hover,
  :where(
      .menu
        li:not(.menu-title):not(.disabled)
        > details
        > summary:not(.menu-title)
    ):not(.active):hover {
    color: inherit !important;
    outline: none !important;
  }
  .accent-svg {
    stroke: var(--color-accent);
    fill: var(--color-accent);
  }
  .input,
  .textarea {
    background-color: var(--color-white);
    color: var(--color-black);
  }
  .btn {
    background-color: var(--color-accent);
    color: var(--color-primary);
    border-radius: 0;
  }
  @media (hover: hover) {
    .btn:hover {
      border-color: var(--color-accent);
      color: var(--color-accent);
      background-color: #0000;
    }
  }
  @keyframes pulseAnimation {
    0%,
    to {
      opacity: 0.5;
    }
    50% {
      opacity: 0.3;
    }
  }
  .pulse {
    animation: 1.5s ease-in-out infinite pulseAnimation;
  }
  .rounded-3 {
    border-radius: 3px;
  }
  :not(.text-secondary)::selection {
    background-color: var(--color-secondary);
  }
  :where(:root),
  :root:has(input.theme-controller[value="light"]:checked),
  [data-theme="light"] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --color-base-100: oklch(25.33% 0.016 252.42);
      --color-base-200: oklch(23.26% 0.014 253.1);
      --color-base-300: oklch(21.15% 0.012 254.09);
      --color-base-content: oklch(97.807% 0.029 256.847);
      --color-primary: oklch(58% 0.233 277.117);
      --color-primary-content: oklch(96% 0.018 272.314);
      --color-secondary: oklch(65% 0.241 354.308);
      --color-secondary-content: oklch(94% 0.028 342.258);
      --color-accent: oklch(77% 0.152 181.912);
      --color-accent-content: oklch(38% 0.063 188.416);
      --color-neutral: oklch(14% 0.005 285.823);
      --color-neutral-content: oklch(92% 0.004 286.32);
      --color-info: oklch(74% 0.16 232.661);
      --color-info-content: oklch(29% 0.066 243.157);
      --color-success: oklch(76% 0.177 163.223);
      --color-success-content: oklch(37% 0.077 168.94);
      --color-warning: oklch(82% 0.189 84.429);
      --color-warning-content: oklch(41% 0.112 45.904);
      --color-error: oklch(71% 0.194 13.428);
      --color-error-content: oklch(27% 0.105 12.094);
      --radius-selector: 0.5rem;
      --radius-field: 0.25rem;
      --radius-box: 0.5rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 1;
      --noise: 0;
    }
  }
  :root:has(input.theme-controller[value="light"]:checked),
  [data-theme="light"] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
  :root:has(input.theme-controller[value="dark"]:checked),
  [data-theme="dark"] {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
  :root,
  [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
  *,
  :after,
  ::backdrop,
  :before {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  :host,
  html {
    line-height: 1.5;
    font-family: var(
      --default-font-family,
      ui-sans-serif,
      system-ui,
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      "Segoe UI Symbol",
      "Noto Color Emoji"
    );
    webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  button,
  input,
  optgroup,
  select,
  textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    background: 0 0;
  }
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    background: 0 0;
  }
  input:where(:not([type="button"], [type="reset"], [type="submit"])),
  select,
  textarea {
    border-width: 1px;
  }
  button,
  input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }
  ::file-selector-button {
    appearance: button;
  }
  :-moz-focusring {
    outline: auto;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  ::-webkit-search-decoration {
    webkit-appearance: none;
  }
  menu,
  ol,
  ul {
    list-style: none;
  }
  textarea {
    resize: vertical;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklch, currentColor 50%, transparent);
  }
  audio,
  canvas,
  embed,
  iframe,
  img,
  object,
  svg,
  video {
    vertical-align: middle;
    display: block;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  :where(
      :root:has(
          .modal-open,
          .modal[open],
          .modal:target,
          .modal-toggle:checked,
          .drawer:not(.drawer-open) > .drawer-toggle:checked
        )
    ) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(
      var(--color-base-100),
      var(--color-base-100)
    );
    --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
  }
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
  :root:has(
      .modal-open,
      .modal[open],
      .modal:target,
      .modal-toggle:checked,
      .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked
    ) {
    overflow: hidden;
  }
  :root {
    scrollbar-color: color-mix(in oklch, currentColor 35%, transparent)
      transparent;
  }
  :where(:root),
  :root:has(input.theme-controller[value="pink"]:checked),
  [data-theme="pink"] {
    color-scheme: light;
    --color-primary: #e04270;
    --color-primary-content: #e04270;
    --color-secondary-content: #e04270;
    --color-base-100: #e04270;
    --color-background: #e04270;
    --color-secondary: #20e4bd;
    --color-sidebar: #20e4bd;
    --color-accent: #263340;
    --color-info-content: #263340;
    --color-neutral: #263340;
    --color-base-content: #263340;
    --radius-selector: 0rem;
    --radius-field: 0rem;
    --radius-box: 0rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
  :root:has(input.theme-controller[value="slate"]:checked),
  [data-theme="slate"] {
    color-scheme: dark;
    --color-primary: #263340;
    --color-primary-content: #263340;
    --color-secondary-content: #263340;
    --color-base-100: #263340;
    --color-background: #263340;
    --color-secondary: #20e4bd;
    --color-sidebar: #20e4bd;
    --color-accent: #fff;
    --color-info-content: #fff;
    --color-base-content: #fff;
    --color-neutral: #263340;
    --radius-selector: 0rem;
    --radius-field: 0rem;
    --radius-box: 0rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
  :root:has(input.theme-controller[value="green"]:checked),
  [data-theme="green"] {
    color-scheme: light;
    --color-primary: #20e4bd;
    --color-primary-content: #20e4bd;
    --color-secondary-content: #20e4bd;
    --color-base-100: #20e4bd;
    --color-background: #20e4bd;
    --color-secondary: #fff;
    --color-sidebar: #e04270;
    --color-accent: #263340;
    --color-info-content: #263340;
    --color-neutral: #263340;
    --color-base-content: #263340;
    --radius-selector: 0rem;
    --radius-field: 0rem;
    --radius-box: 0rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
  :root:has(input.theme-controller[value="black"]:checked),
  [data-theme="black"] {
    color-scheme: dark;
    --color-base-100: #000;
    --color-base-200: oklch(17% 0 0);
    --color-base-300: oklch(21% 0 0);
    --color-base-content: #fff;
    --color-primary: #000;
    --color-primary-content: #000;
    --color-secondary: #e04270;
    --color-secondary-content: #000;
    --color-accent: #fff;
    --color-accent-content: oklch(100% 0 0);
    --color-neutral: oklch(25% 0 0);
    --color-neutral-content: oklch(100% 0 0);
    --color-info: oklch(45.201% 0.313 264.052);
    --color-info-content: #fff;
    --color-success: oklch(51.975% 0.176 142.495);
    --color-success-content: oklch(90.395% 0.035 142.495);
    --color-warning: oklch(96.798% 0.211 109.769);
    --color-warning-content: oklch(19.359% 0.042 109.769);
    --color-error: oklch(62.795% 0.257 29.233);
    --color-error-content: oklch(12.559% 0.051 29.233);
    --radius-selector: 0rem;
    --radius-field: 0rem;
    --radius-box: 0rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
    --color-background: #fff;
  }
  :root:has(input.theme-controller[value="white"]:checked),
  [data-theme="white"] {
    color-scheme: light;
    --color-primary: #fff;
    --color-primary-content: #000;
    --color-secondary-content: #fff;
    --color-secondary: #20e4bd;
    --color-tertiary: #000;
    --color-accent: #000;
    --color-info-content: #000;
    --color-neutral: #fff;
    --color-base-100: #fff;
    --color-base-content: #000;
    --color-back-ground: #000;
    --radius-selector: 0rem;
    --radius-field: 0rem;
    --radius-box: 0rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer components;
@layer utilities {
  .menu {
    flex-flow: column wrap;
    width: fit-content;
    padding: 0.5rem;
    font-size: 0.875rem;
    display: flex;
  }
  .menu :where(li ul) {
    white-space: nowrap;
    margin-inline-start: 1rem;
    padding-inline-start: 0.5rem;
    position: relative;
  }
  .menu :where(li ul):before {
    background-color: var(--color-base-content);
    opacity: 0.1;
    width: var(--border);
    content: "";
    inset-inline-start: 0;
    position: absolute;
    top: 0.75rem;
    bottom: 0.75rem;
  }
  .menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
    display: none;
  }
  .menu :where(li:not(.menu-title) > :not(ul, details, .menu-title, .btn)),
  .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    border-radius: var(--radius-field);
    text-align: start;
    text-wrap: balance;
    -webkit-user-select: none;
    user-select: none;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: 0.5rem;
    padding-block: 0.375rem;
    padding-inline: 0.75rem;
    transition-property: color, background-color, box-shadow;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    display: grid;
  }
  .menu :where(li > details > summary) {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
  .menu :where(li > details > summary)::-webkit-details-marker {
    display: none;
  }
  :is(
      .menu :where(li > details > summary),
      .menu :where(li > .menu-dropdown-toggle)
    ):after {
    content: "";
    transform-origin: 50%;
    pointer-events: none;
    justify-self: flex-end;
    width: 0.375rem;
    height: 0.375rem;
    transition-property: rotate, translate;
    transition-duration: 0.2s;
    display: block;
    translate: 0 -1px;
    rotate: -135deg;
    box-shadow: inset 2px 2px;
  }
  .menu :where(li > details[open] > summary):after,
  .menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
    translate: 0 1px;
    rotate: 45deg;
  }
  .menu
    :where(
      li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
      li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
    ):not(.menu-active, :active, .btn).menu-focus,
  .menu
    :where(
      li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
      li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
    ):not(.menu-active, :active, .btn):focus-visible {
    cursor: pointer;
    background-color: color-mix(
      in oklab,
      var(--color-base-content) 10%,
      transparent
    );
    color: var(--color-base-content);
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
  .menu
    :where(
      li:not(.menu-title, .disabled)
        > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover,
      li:not(.menu-title, .disabled)
        > details
        > summary:not(.menu-title):not(.menu-active, :active, .btn):hover
    ) {
    cursor: pointer;
    background-color: color-mix(
      in oklab,
      var(--color-base-content) 10%,
      transparent
    );
    outline-offset: 2px;
    outline: 2px solid #0000;
    box-shadow: inset 0 1px #00000003, inset 0 -1px #ffffff03;
  }
  .menu :where(li:empty) {
    background-color: var(--color-base-content);
    opacity: 0.1;
    height: 1px;
    margin: 0.5rem 1rem;
  }
  .menu :where(li) {
    flex-flow: column wrap;
    flex-shrink: 0;
    align-items: stretch;
    display: flex;
    position: relative;
  }
  .menu :where(li) .badge {
    justify-self: flex-end;
  }
  .menu :where(li) > :not(ul, .menu-title, details, .btn):active,
  .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active,
  .menu :where(li) > details > summary:active {
    background-color: var(--color-neutral);
    color: var(--color-neutral-content);
    outline-offset: 2px;
    background-size: calc(var(--noise) * 1000px);
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
    outline: 2px solid #0000;
  }
  :is(
      .menu :where(li) > :not(ul, .menu-title, details, .btn):active,
      .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active,
      .menu :where(li) > details > summary:active
    ):not(
      :is(
          .menu :where(li) > :not(ul, .menu-title, details, .btn):active,
          .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active,
          .menu :where(li) > details > summary:active
        ):active
    ) {
    box-shadow: 0 2px calc(var(--depth) * 3px)-2px var(--color-neutral);
  }
  .menu :where(li).menu-disabled {
    pointer-events: none;
    color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
  }
  .btn {
    cursor: pointer;
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    webkit-user-select: none;
    -webkit-user-select: none;
    user-select: none;
    padding-inline: var(--btn-p);
    color: var(--btn-fg);
    height: var(--size);
    outline-color: var(--btn-color, var(--color-base-content));
    background-color: var(--btn-bg);
    background-size: calc(var(--noise) * 100%);
    background-image: var(--btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--btn-border);
    text-shadow: 0 0.5px oklch(1 0 0 / calc(var(--depth) * 0.15));
    box-shadow: 0 0.5px 0 0.5px
        color-mix(
          in oklab,
          color-mix(in oklab, white 30%, var(--btn-bg)) calc(var(--depth) * 20%),
          transparent
        )
        inset,
      var(--btn-shadow);
    --size: calc(var(--size-field, 0.25rem) * 10);
    --btn-bg: var(--btn-color, var(--color-base-200));
    --btn-fg: var(--color-base-content);
    --btn-p: 1rem;
    --btn-border: color-mix(
      in oklab,
      var(--btn-bg),
      black calc(var(--depth) * 5%)
    );
    --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg)
            calc(var(--depth) * 30%), transparent),
      0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), transparent);
    --btn-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    flex-wrap: nowrap;
    flex-shrink: 0;
    justify-content: center;
    align-items: center;
    gap: 0.375rem;
    font-size: 0.875rem;
    font-weight: 600;
    text-decoration-line: none;
    transition-property: color, background-color, border-color, box-shadow;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    display: inline-flex;
  }
  .btn:hover {
    --btn-bg: color-mix(
      in oklab,
      var(--btn-color, var(--color-base-200)),
      black 7%
    );
  }
  .btn.btn-active {
    --btn-bg: color-mix(
      in oklab,
      var(--btn-color, var(--color-base-200)),
      black 7%
    );
    --btn-shadow: 0 0 0 0 oklch(0% 0 0/0.07);
    isolation: isolate;
  }
  .btn:focus-visible {
    outline-width: 2px;
    outline-style: solid;
  }
  .btn:active:not(.btn-active) {
    --btn-bg: color-mix(
      in oklab,
      var(--btn-color, var(--color-base-200)),
      black 5%
    );
    --btn-border: color-mix(
      in oklab,
      var(--btn-color, var(--color-base-200)),
      black 7%
    );
    --btn-shadow: 0 0 0 0 oklch(0% 0 0/0.07);
    translate: 0 0.5px;
  }
  .btn:is(:disabled, [disabled], .btn-disabled) {
    pointer-events: none;
    --btn-border: transparent;
    --btn-noise: none;
    --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, transparent);
  }
  .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
    background-color: color-mix(
      in oklab,
      var(--color-base-content) 10%,
      transparent
    );
    box-shadow: none;
  }
  .btn:is(:disabled, [disabled], .btn-disabled):hover {
    pointer-events: none;
    background-color: color-mix(
      in oklab,
      var(--color-neutral) 20%,
      transparent
    );
    --btn-border: transparent;
    --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, transparent);
  }
  .btn:is(input[type="checkbox"], input[type="radio"]) {
    appearance: none;
  }
  .btn:is(input[type="checkbox"], input[type="radio"]):after {
    content: attr(aria-label);
  }
  .btn:is(input[type="checkbox"], input[type="radio"]):checked {
    --btn-color: var(--color-primary);
    --btn-bg: var(--color-primary);
    --btn-fg: var(--color-primary-content);
    --btn-border: var(--color-primary);
  }
  .btn:is(input[type="checkbox"], input[type="radio"]):checked:focus-visible {
    outline-color: var(--color-primary);
  }
  .btn:is(input[type="checkbox"], input[type="radio"]):checked:hover {
    --btn-bg: color-mix(in oklab, var(--color-primary) 90%, black);
    --btn-border: color-mix(in oklab, var(--color-primary) 90%, black);
  }
  .drawer-side {
    pointer-events: none;
    visibility: hidden;
    overscroll-behavior: contain;
    opacity: 0;
    width: 100%;
    transition: opacity 0.2s ease-out 0.1s allow-discrete,
      visibility 0.3s ease-out 0.1s allow-discrete;
    inset-inline-start: 0;
    grid-template-rows: repeat(1, minmax(0, 1fr));
    grid-template-columns: repeat(1, minmax(0, 1fr));
    grid-row-start: 1;
    grid-column-start: 1;
    place-items: flex-start start;
    height: 100dvh;
    display: grid;
    position: fixed;
    top: 0;
    overflow: hidden;
  }
  .drawer-side > .drawer-overlay {
    cursor: pointer;
    background-color: #0006;
    place-self: stretch stretch;
    position: sticky;
    top: 0;
  }
  .drawer-side > * {
    grid-row-start: 1;
    grid-column-start: 1;
  }
  .drawer-side > :not(.drawer-overlay) {
    will-change: transform;
    transition: translate 0.3s ease-out;
    translate: -100%;
  }
  [dir="rtl"] :is(.drawer-side > :not(.drawer-overlay)) {
    translate: 100%;
  }
  .\!modal {
    pointer-events: none !important;
    visibility: hidden !important;
    width: 100% !important;
    max-width: none !important;
    height: 100% !important;
    max-height: none !important;
    color: inherit !important;
    transition: transform 0.3s ease-out allow-discrete,
      visibility 0.3s ease-out allow-discrete,
      opacity 0.1s ease-out allow-discrete !important;
    overscroll-behavior: contain !important;
    z-index: 999 !important;
    background-color: #0000 !important;
    place-items: center !important;
    margin: 0 !important;
    padding: 0 !important;
    display: grid !important;
    position: fixed !important;
    inset: 0 !important;
    overflow: hidden !important;
  }
  .\!modal:not(dialog:not(.modal-open)),
  .\!modal::backdrop {
    opacity: 1 !important;
    transition: display 0.3s ease-out allow-discrete,
      opacity 0.3s ease-out allow-discrete,
      visibility 0.3s ease-out allow-discrete !important;
    background-color: #0006 !important;
  }
  @starting-style {
    .\!modal:not(dialog:not(.modal-open)) {
      visibility: hidden !important;
    }
  }
  @starting-style {
    .\!modal:not(dialog:not(.modal-open)) {
      opacity: 0 !important;
    }
  }
  .\!modal.modal-open,
  .\!modal[open],
  .\!modal:target {
    pointer-events: auto !important;
    visibility: visible !important;
    opacity: 1 !important;
  }
  @starting-style {
    :is(.\!modal.modal-open, .\!modal[open], .\!modal:target) {
      visibility: hidden !important;
    }
  }
  @starting-style {
    :is(.\!modal.modal-open, .\!modal[open], .\!modal:target) {
      opacity: 0 !important;
    }
  }
  :is(.\!modal.modal-open, .\!modal[open], .\!modal:target) .modal-box {
    opacity: 1 !important;
    translate: 0 !important;
    scale: 1 !important;
  }
  .modal {
    pointer-events: none;
    visibility: hidden;
    width: 100%;
    max-width: none;
    height: 100%;
    max-height: none;
    color: inherit;
    transition: transform 0.3s ease-out allow-discrete,
      visibility 0.3s ease-out allow-discrete,
      opacity 0.1s ease-out allow-discrete;
    overscroll-behavior: contain;
    z-index: 999;
    background-color: #0000;
    place-items: center;
    margin: 0;
    padding: 0;
    display: grid;
    position: fixed;
    inset: 0;
    overflow: hidden;
  }
  .modal:not(dialog:not(.modal-open)),
  .modal::backdrop {
    opacity: 1;
    transition: display 0.3s ease-out allow-discrete,
      opacity 0.3s ease-out allow-discrete,
      visibility 0.3s ease-out allow-discrete;
    background-color: #0006;
  }
  @starting-style {
    .modal:not(dialog:not(.modal-open)) {
      visibility: hidden;
    }
  }
  @starting-style {
    .modal:not(dialog:not(.modal-open)) {
      opacity: 0;
    }
  }
  .modal.modal-open,
  .modal[open],
  .modal:target {
    pointer-events: auto;
    visibility: visible;
    opacity: 1;
  }
  @starting-style {
    :is(.modal.modal-open, .modal[open], .modal:target) {
      visibility: hidden;
    }
  }
  @starting-style {
    :is(.modal.modal-open, .modal[open], .modal:target) {
      opacity: 0;
    }
  }
  :is(.modal.modal-open, .modal[open], .modal:target) .modal-box {
    opacity: 1;
    translate: 0;
    scale: 1;
  }
  .tab {
    cursor: pointer;
    appearance: none;
    text-align: center;
    webkit-user-select: none;
    -webkit-user-select: none;
    user-select: none;
    --tab-p: 1rem;
    --tab-bg: var(--color-base-100);
    --tab-border-color: var(--color-base-300);
    --tab-radius-ss: 0;
    --tab-radius-se: 0;
    --tab-radius-es: 0;
    --tab-radius-ee: 0;
    --tab-order: 0;
    --tab-radius-min: calc(0.75rem - var(--border));
    flex-wrap: wrap;
    order: var(--tab-order);
    height: calc(var(--size-field, 0.25rem) * 10);
    border-color: #0000;
    justify-content: center;
    align-items: center;
    padding-inline-start: var(--tab-p);
    padding-inline-end: var(--tab-p);
    font-size: 0.875rem;
    display: inline-flex;
    position: relative;
  }
  @media (hover: hover) {
    .tab:hover {
      color: var(--color-base-content);
    }
  }
  .tab:is(input[type="radio"]) {
    min-width: fit-content;
  }
  .tab:is(input[type="radio"]):after {
    content: attr(aria-label);
  }
  :is(.tab:checked, .tab:is(.tab-active, [aria-selected="true"]))
    + .tab-content {
    height: 100%;
    display: block;
  }
  .tab:not(:checked, :hover, .tab-active, [aria-selected="true"]) {
    color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
  }
  .tab:not(input):empty {
    cursor: default;
    flex-grow: 1;
  }
  .tab:focus {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
  .tab:focus-visible {
    outline-offset: -5px;
    outline: 2px solid;
  }
  .tab[disabled] {
    pointer-events: none;
    opacity: 0.4;
  }
  .tooltip {
    --tt-bg: var(--color-neutral);
    --tt-off: calc(100% + 0.5rem);
    --tt-tail: calc(100% + 1px + 0.25rem);
    display: inline-block;
    position: relative;
  }
  .tooltip > :where(.tooltip-content),
  .tooltip[data-tip]:before {
    border-radius: var(--radius-field);
    text-align: center;
    white-space: normal;
    max-width: 20rem;
    color: var(--color-neutral-content);
    opacity: 0;
    background-color: var(--tt-bg);
    pointer-events: none;
    z-index: 1;
    --tw-content: attr(data-tip);
    content: var(--tw-content);
    width: max-content;
    padding-block: 0.25rem;
    padding-inline: 0.5rem;
    font-size: 0.875rem;
    line-height: 1.25em;
    transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms,
      transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
    position: absolute;
  }
  .tooltip:after {
    opacity: 0;
    background-color: var(--tt-bg);
    content: "";
    pointer-events: none;
    width: 0.625rem;
    height: 0.25rem;
    transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms,
      transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
    display: block;
    position: absolute;
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
    mask-image: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
    -webkit-mask-position: -1px 0;
    mask-position: -1px 0;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
  }
  :is(
      .tooltip.tooltip-open,
      .tooltip[data-tip]:hover,
      .tooltip:hover,
      .tooltip:has(:focus-visible)
    )
    > .tooltip-content,
  :is(
      .tooltip.tooltip-open,
      .tooltip[data-tip]:hover,
      .tooltip:hover,
      .tooltip:has(:focus-visible)
    )[data-tip]:before,
  :is(
      .tooltip.tooltip-open,
      .tooltip[data-tip]:hover,
      .tooltip:hover,
      .tooltip:has(:focus-visible)
    ):after {
    opacity: 1;
    --tt-pos: 0rem;
    transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1),
      transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }
  .tooltip > .tooltip-content,
  .tooltip[data-tip]:before {
    transform: translate(-50%) translateY(var(--tt-pos, 0.25rem));
    inset: auto auto var(--tt-off) 50%;
  }
  .tooltip:after {
    transform: translate(-50%) translateY(var(--tt-pos, 0.25rem));
    inset: auto auto var(--tt-tail) 50%;
  }
  .dropdown {
    position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
    display: inline-block;
    position: relative;
  }
  .dropdown > :not(summary):focus {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
  .dropdown .dropdown-content {
    position: absolute;
  }
  .dropdown:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within)
    .dropdown-content {
    transform-origin: top;
    opacity: 0;
    display: none;
    scale: 95%;
  }
  .dropdown[popover],
  .dropdown .dropdown-content {
    z-index: 999;
    transition-behavior: allow-discrete;
    transition-property: opacity, scale, display;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    animation: 0.2s dropdown;
  }
  @starting-style {
    :is(.dropdown[popover], .dropdown .dropdown-content) {
      scale: 95%;
    }
  }
  @starting-style {
    :is(.dropdown[popover], .dropdown .dropdown-content) {
      opacity: 0;
    }
  }
  :is(
      .dropdown.dropdown-open,
      .dropdown:not(.dropdown-hover):focus,
      .dropdown:focus-within
    )
    [tabindex]:first-child {
    pointer-events: none;
  }
  :is(
      .dropdown.dropdown-open,
      .dropdown:not(.dropdown-hover):focus,
      .dropdown:focus-within
    )
    .dropdown-content {
    opacity: 1;
  }
  .dropdown.dropdown-hover:hover .dropdown-content {
    opacity: 1;
    scale: 100%;
  }
  .dropdown:is(details) summary::-webkit-details-marker {
    display: none;
  }
  :is(.dropdown.dropdown-open, .dropdown:focus, .dropdown:focus-within)
    .dropdown-content {
    scale: 100%;
  }
  .dropdown:where([popover]) {
    background: 0 0;
  }
  .dropdown[popover] {
    color: inherit;
    position: fixed;
  }
  @supports not (position-area: bottom) {
    .dropdown[popover] {
      margin: auto;
    }
    .dropdown[popover].dropdown-open:not(:popover-open) {
      transform-origin: top;
      opacity: 0;
      display: none;
      scale: 95%;
    }
    .dropdown[popover]::backdrop {
      background-color: oklab(0% none none/.3);
    }
  }
  .dropdown[popover]:not(.dropdown-open, :popover-open) {
    transform-origin: top;
    opacity: 0;
    display: none;
    scale: 95%;
  }
  .drawer-toggle {
    appearance: none;
    opacity: 0;
    width: 0;
    height: 0;
    position: fixed;
  }
  .drawer-toggle:checked ~ .drawer-side {
    pointer-events: auto;
    visibility: visible;
    opacity: 1;
    overflow-y: auto;
  }
  .drawer-toggle:checked ~ .drawer-side > :not(.drawer-overlay) {
    translate: 0%;
  }
  .drawer-toggle:focus-visible ~ .drawer-content label.drawer-button {
    outline-offset: 2px;
    outline: 2px solid;
  }
  .\!loading {
    pointer-events: none !important;
    aspect-ratio: 1 !important;
    vertical-align: middle !important;
    background-color: currentColor !important;
    width: 1.5rem !important;
    display: inline-block !important;
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E") !important;
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E") !important;
    -webkit-mask-position: 50% !important;
    mask-position: 50% !important;
    -webkit-mask-size: 100% !important;
    mask-size: 100% !important;
    -webkit-mask-repeat: no-repeat !important;
    mask-repeat: no-repeat !important;
  }
  .loading {
    pointer-events: none;
    aspect-ratio: 1;
    vertical-align: middle;
    background-color: currentColor;
    width: 1.5rem;
    display: inline-block;
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
    -webkit-mask-position: 50%;
    mask-position: 50%;
    -webkit-mask-size: 100%;
    mask-size: 100%;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .collapse {
    border-radius: var(--rounded-box, 1rem);
    grid-template-rows: max-content 0fr;
    width: 100%;
    transition: grid-template-rows 0.2s;
    display: grid;
    position: relative;
    overflow: hidden;
  }
  .collapse:not(td, tr, colgroup) {
    visibility: visible;
  }
  .collapse > input:is([type="checkbox"], [type="radio"]) {
    appearance: none;
    opacity: 0;
    z-index: 1;
    grid-row-start: 1;
    grid-column-start: 1;
    width: 100%;
    min-height: 3.75rem;
    padding: 1rem;
    padding-inline-end: 3rem;
    transition: background-color 0.2s ease-out;
  }
  .collapse:is([open], .collapse-open, :focus:not(.collapse-close)),
  .collapse:not(.collapse-close):has(
      > input:is([type="checkbox"], [type="radio"]):checked
    ) {
    grid-template-rows: max-content 1fr;
  }
  .collapse:is([open], .collapse-open, :focus:not(.collapse-close))
    > .collapse-content,
  .collapse:not(.collapse-close)
    > :where(
      input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content
    ) {
    visibility: visible;
    min-height: fit-content;
  }
  :is(
      .collapse,
      .collapse:has(
          .collapse-title,
          > input:is([type="checkbox"], [type="radio"])
        )
    ):focus-visible {
    outline-color: var(--color-base-content);
    outline-offset: 2px;
    outline-width: 2px;
    outline-style: solid;
  }
  .collapse:not(.collapse-open, .collapse-close) > input[type="checkbox"],
  .collapse:not(.collapse-open, .collapse-close)
    > input[type="radio"]:not(:checked),
  .collapse:not(.collapse-open, .collapse-close) > .collapse-title {
    cursor: pointer;
  }
  .collapse:focus:not(.collapse-open, .collapse-close, .collapse[open])
    > .collapse-title {
    cursor: unset;
  }
  .collapse:is([open], .collapse-open, :focus:not(.collapse-close))
    > :where(.collapse-content),
  .collapse:not(.collapse-close)
    > :where(
      input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content
    ) {
    padding-bottom: 1rem;
    transition: padding 0.2s ease-out, background-color 0.2s ease-out;
  }
  .collapse:is([open], .collapse-open).collapse-arrow > .collapse-title:after,
  .collapse.collapse-arrow:focus:not(.collapse-close) > .collapse-title:after,
  .collapse.collapse-arrow:not(.collapse-close)
    > input:is([type="checkbox"], [type="radio"]):checked
    ~ .collapse-title:after {
    transform: translateY(-50%) rotate(225deg);
  }
  .collapse[open].collapse-plus > .collapse-title:after,
  .collapse.collapse-open.collapse-plus > .collapse-title:after,
  .collapse.collapse-plus:focus:not(.collapse-close) > .collapse-title:after,
  .collapse.collapse-plus:not(.collapse-close)
    > input:is([type="checkbox"], [type="radio"]):checked
    ~ .collapse-title:after {
    content: "−";
  }
  .collapse:is(details) {
    width: 100%;
  }
  .collapse:is(details) summary {
    display: block;
    position: relative;
  }
  .collapse:is(details) summary::-webkit-details-marker {
    display: none;
  }
  .collapse:is(details) summary {
    outline: none;
  }
  .collapse-content {
    visibility: hidden;
    min-height: 0;
    cursor: unset;
    grid-row-start: 2;
    grid-column-start: 1;
    padding-left: 1rem;
    padding-right: 1rem;
    transition: padding 0.2s ease-out, background-color 0.2s ease-out;
  }
  .collapse {
    visibility: collapse;
  }
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .select {
    border: var(--border) solid transparent;
    appearance: none;
    background-color: var(--color-base-100);
    vertical-align: middle;
    width: min(20rem, 100%);
    height: var(--size);
    text-overflow: ellipsis;
    box-shadow: 0 1px
        color-mix(
          in oklab,
          var(--input-color) calc(var(--depth) * 10%),
          transparent
        )
        inset,
      0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    border-color: var(--input-color);
    --input-color: color-mix(
      in oklab,
      var(--color-base-content) 20%,
      transparent
    );
    --size: calc(var(--size-field, 0.25rem) * 10);
    background-image: linear-gradient(45deg, #0000 50%, currentColor 50%),
      linear-gradient(135deg, currentColor 50%, #0000 50%);
    background-position: calc(100% - 20px) calc(1px + 50%),
      calc(100% - 16.1px) calc(1px + 50%);
    background-repeat: no-repeat;
    background-size: 4px 4px, 4px 4px;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    flex-shrink: 1;
    align-items: center;
    gap: 0.375rem;
    padding-inline: 1rem 1.75rem;
    font-size: 0.875rem;
    display: inline-flex;
    position: relative;
  }
  [dir="rtl"] .select {
    background-position: 12px calc(1px + 50%), 16px calc(1px + 50%);
  }
  .select select {
    appearance: none;
    background-color: #0000;
    border-style: none;
    width: calc(100% + 2.75rem);
    height: 100%;
    margin-inline: -1rem -1.75rem;
    padding-inline: 1rem 1.75rem;
  }
  .select select:focus,
  .select select:focus-within {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
  .select:focus,
  .select:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px
      color-mix(
        in oklab,
        var(--input-color) calc(var(--depth) * 10%),
        transparent
      );
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
  }
  .select:has(> select[disabled]),
  .select:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
  }
  :is(
      .select:has(> select[disabled]),
      .select:is(:disabled, [disabled])
    )::placeholder {
    color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
  }
  .select:has(> select[disabled]) > select[disabled] {
    cursor: not-allowed;
  }
  .card {
    border-radius: var(--radius-box);
    outline-offset: 2px;
    outline: 0 solid #0000;
    flex-direction: column;
    transition: outline 0.2s ease-in-out;
    display: flex;
    position: relative;
  }
  .card:focus {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
  .card:focus-visible {
    outline-color: currentColor;
  }
  .card :where(figure:first-child) {
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-end-radius: unset;
    border-end-start-radius: unset;
    overflow: hidden;
  }
  .card :where(figure:last-child) {
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-end-radius: inherit;
    border-end-start-radius: inherit;
    overflow: hidden;
  }
  .card:where(.card-border) {
    border: var(--border) solid var(--color-base-200);
  }
  .card:where(.card-dash) {
    border: var(--border) dashed var(--color-base-200);
  }
  .card.image-full {
    display: grid;
  }
  .card.image-full:before {
    border-radius: var(--radius-box);
    background-color: var(--color-neutral);
    opacity: 0.75;
    content: "";
    grid-row-start: 1;
    grid-column-start: 1;
    position: relative;
  }
  .card.image-full > * {
    grid-row-start: 1;
    grid-column-start: 1;
  }
  .card.image-full > .card-body {
    color: var(--color-neutral-content);
    position: relative;
  }
  .card.image-full :where(figure) {
    border-radius: inherit;
    overflow: hidden;
  }
  .card.image-full > figure img {
    object-fit: cover;
    height: 100%;
  }
  .card figure {
    justify-content: center;
    align-items: center;
    display: flex;
  }
  .card:has(> input:is(input[type="checkbox"], input[type="radio"])) {
    cursor: pointer;
    -webkit-user-select: none;
    user-select: none;
  }
  .card:has(> :checked) {
    outline: 2px solid;
  }
  .checkbox {
    border: var(--border) solid
      var(
        --input-color,
        color-mix(in oklab, var(--color-base-content) 20%, transparent)
      );
    cursor: pointer;
    appearance: none;
    border-radius: var(--radius-selector);
    vertical-align: middle;
    color: var(--color-base-content);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
      0 0 transparent inset, 0 0 transparent;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    background-size: calc(var(--noise) * 1000px);
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
    flex-shrink: 0;
    padding: 0.25rem;
    transition: background-color 0.2s, box-shadow 0.2s;
    position: relative;
  }
  .checkbox:before {
    --tw-content: "";
    content: var(--tw-content);
    opacity: 0;
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
    width: 100%;
    height: 100%;
    box-shadow: 0 3px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    background-color: currentColor;
    font-size: 1rem;
    line-height: 0.75;
    transition: clip-path 0.3s 0.1s, opacity 0.1s 0.1s, rotate 0.3s 0.1s,
      translate 0.3s 0.1s;
    display: block;
    rotate: 45deg;
  }
  .checkbox:focus-visible {
    outline: 2px solid var(--input-color, currentColor);
    outline-offset: 2px;
  }
  .checkbox:checked,
  .checkbox[aria-checked="true"] {
    background-color: var(--input-color, transparent);
    box-shadow: 0 0 transparent inset,
      0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
      0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
  }
  :is(.checkbox:checked, .checkbox[aria-checked="true"]):before {
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
    opacity: 1;
  }
  @media print {
    :is(.checkbox:checked, .checkbox[aria-checked="true"]):before {
      --tw-content: "✔︎";
      clip-path: none;
      background-color: #0000;
      rotate: none;
    }
  }
  @media (forced-colors: active) {
    :is(.checkbox:checked, .checkbox[aria-checked="true"]):before {
      --tw-content: "✔︎";
      clip-path: none;
      background-color: #0000;
      rotate: none;
    }
  }
  .checkbox:indeterminate:before {
    opacity: 1;
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
    translate: 0 -35%;
    rotate: none;
  }
  .checkbox:disabled {
    cursor: not-allowed;
    opacity: 0.2;
  }
  .range {
    appearance: none;
    webkit-appearance: none;
    --range-thumb: var(--color-base-100);
    --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
    --range-progress: currentColor;
    --range-fill: 1;
    --range-p: 0.25rem;
    --range-bg: color-mix(in oklab, currentColor 10%, transparent);
    cursor: pointer;
    vertical-align: middle;
    border-radius: calc(var(--radius-selector) + var(--range-p) + 1px);
    width: min(20rem, 100%);
    height: var(--range-thumb-size);
    background-color: #0000;
    border: none;
    overflow: hidden;
  }
  [dir="rtl"] .range {
    --range-dir: -1;
  }
  .range:focus {
    outline: none;
  }
  .range:focus-visible {
    outline-offset: 2px;
    outline: 2px solid;
  }
  .range::-webkit-slider-runnable-track {
    background-color: var(--range-bg);
    border-radius: var(--radius-selector);
    width: 100%;
    height: calc(var(--range-thumb-size) * 0.5);
  }
  @media (forced-colors: active) {
    .range::-webkit-slider-runnable-track {
      border: 1px solid;
    }
  }
  .range::-webkit-slider-thumb {
    box-sizing: border-box;
    border-radius: calc(var(--radius-selector) + var(--range-p) + 1px);
    height: var(--range-thumb-size);
    width: var(--range-thumb-size);
    border: var(--range-p) solid;
    appearance: none;
    webkit-appearance: none;
    color: var(--range-progress);
    box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
      0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
      0 1px
        color-mix(in oklab, currentColor calc(var(--depth) * 10%), transparent),
      0 0 0 2rem var(--range-thumb) inset,
      calc(
          (var(--range-dir, 1) * -100rem) -
            (var(--range-dir, 1) * var(--range-thumb-size) / 2)
        )
        0 0 calc(100rem * var(--range-fill));
    background-color: currentColor;
    position: relative;
    top: 50%;
    transform: translateY(-50%);
  }
  .range::-moz-range-track {
    background-color: var(--range-bg);
    border-radius: var(--radius-selector);
    width: 100%;
    height: calc(var(--range-thumb-size) * 0.5);
  }
  @media (forced-colors: active) {
    .range::-moz-range-track {
      border: 1px solid;
    }
  }
  .range::-moz-range-thumb {
    box-sizing: border-box;
    border-radius: calc(var(--radius-selector) + var(--range-p) + 1px);
    height: var(--range-thumb-size);
    width: var(--range-thumb-size);
    border: var(--range-p) solid;
    color: var(--range-progress);
    box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
      0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
      0 1px
        color-mix(in oklab, currentColor calc(var(--depth) * 10%), transparent),
      0 0 0 2rem var(--range-thumb) inset,
      calc(
          (var(--range-dir, 1) * -100rem) -
            (var(--range-dir, 1) * var(--range-thumb-size) / 2)
        )
        0 0 calc(100rem * var(--range-fill));
    background-color: currentColor;
    position: relative;
    top: 50%;
  }
  .range:disabled {
    cursor: not-allowed;
    opacity: 0.3;
  }
  .table {
    border-radius: var(--radius-box);
    text-align: left;
    width: 100%;
    font-size: 0.875rem;
    position: relative;
  }
  .table:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    text-align: right;
  }
  @media (hover: hover) {
    :is(.table tr.row-hover, .table tr.row-hover:nth-child(2n)):hover {
      background-color: var(--color-base-200);
    }
  }
  .table :where(th, td) {
    vertical-align: middle;
    padding-block: 0.75rem;
    padding-inline: 1rem;
  }
  .table :where(thead, tfoot) {
    white-space: nowrap;
    color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
    font-size: 0.875rem;
    font-weight: 600;
  }
  .table :where(tfoot) {
    border-top: var(--border) solid var(--color-base-200);
  }
  .table :where(.table-pin-rows thead tr) {
    z-index: 1;
    background-color: var(--color-base-100);
    position: sticky;
    top: 0;
  }
  .table :where(.table-pin-rows tfoot tr) {
    z-index: 1;
    background-color: var(--color-base-100);
    position: sticky;
    bottom: 0;
  }
  .table :where(.table-pin-cols tr th) {
    background-color: var(--color-base-100);
    position: sticky;
    left: 0;
    right: 0;
  }
  .table
    :where(
      thead tr,
      tbody tr:not(:last-child),
      tbody tr:first-child:last-child
    ) {
    border-bottom: var(--border) solid var(--color-base-200);
  }
  .list {
    flex-direction: column;
    font-size: 0.875rem;
    display: flex;
  }
  .list .list-row {
    --list-grid-cols: minmax(0, auto) 1fr;
    border-radius: var(--radius-box);
    word-break: break-word;
    grid-auto-flow: column;
    grid-template-columns: var(--list-grid-cols);
    gap: 1rem;
    padding: 1rem;
    display: grid;
    position: relative;
  }
  .list .list-row:has(.list-col-grow:first-child) {
    --list-grid-cols: 1fr;
  }
  .list .list-row:has(.list-col-grow:nth-child(2)) {
    --list-grid-cols: minmax(0, auto) 1fr;
  }
  .list .list-row:has(.list-col-grow:nth-child(3)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
  }
  .list .list-row:has(.list-col-grow:nth-child(4)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
  }
  .list .list-row:has(.list-col-grow:nth-child(5)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto)
      minmax(0, auto) 1fr;
  }
  .list .list-row:has(.list-col-grow:nth-child(6)) {
    --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto)
      minmax(0, auto) minmax(0, auto) 1fr;
  }
  :is(
      .list .list-row:has(:not(:last-child)),
      .list .list-row:not(:last-child)
    ):after {
    content: "";
    border-bottom: var(--border) solid;
    inset-inline: var(--radius-box);
    border-color: color-mix(
      in oklab,
      var(--color-base-content) 5%,
      transparent
    );
    position: absolute;
    bottom: 0;
  }
  .list .list-row :not(.list-col-wrap) {
    grid-row-start: 1;
  }
  .toast {
    white-space: nowrap;
    min-width: fit-content;
    translate: var(--toast-x, 0) var(--toast-y, 0);
    inset-inline: auto 0;
    background-color: #0000;
    flex-direction: column;
    gap: 0.5rem;
    margin: 1rem;
    display: flex;
    position: fixed;
    top: auto;
    bottom: 0;
  }
  .toast > * {
    animation: 0.25s ease-out toast;
  }
  .toast:where(.toast-start) {
    --toast-x: 0;
    inset-inline: 0 auto;
  }
  .toast:where(.toast-center) {
    --toast-x: -50%;
    inset-inline: 50%;
  }
  .toast:where(.toast-end) {
    --toast-x: 0;
    inset-inline: auto 0;
  }
  .toast:where(.toast-bottom) {
    --toast-y: 0;
    top: auto;
    bottom: 0;
  }
  .toast:where(.toast-middle) {
    --toast-y: -50%;
    top: 50%;
    bottom: auto;
  }
  .toast:where(.toast-top) {
    --toast-y: 0;
    top: 0;
    bottom: auto;
  }
  .swap {
    cursor: pointer;
    vertical-align: middle;
    webkit-user-select: none;
    -webkit-user-select: none;
    user-select: none;
    place-content: center;
    display: inline-grid;
    position: relative;
  }
  .swap input {
    appearance: none;
    border: none;
  }
  .swap > * {
    grid-row-start: 1;
    grid-column-start: 1;
    transition-property: transform, rotate, opacity;
    transition-duration: 0.2s;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
  .swap .swap-on,
  .swap .swap-indeterminate,
  .swap input:indeterminate ~ .swap-on,
  :is(.swap input:checked, .swap input:indeterminate) ~ .swap-off {
    opacity: 0;
  }
  .swap input:checked ~ .swap-on,
  .swap input:indeterminate ~ .swap-indeterminate {
    opacity: 1;
  }
  .menu-horizontal {
    flex-direction: row;
    display: inline-flex;
  }
  .menu-horizontal > li:not(.menu-title) > details > ul {
    margin-inline-start: 0;
    margin-top: 1rem;
    padding-block: 0.5rem;
    padding-inline-end: 0.5rem;
    position: absolute;
  }
  .menu-horizontal > li > details > ul:before {
    content: none;
  }
  :where(.menu-horizontal > li:not(.menu-title) > details > ul) {
    border-radius: var(--radius-box);
    background-color: var(--color-base-100);
    box-shadow: 0 1px 3px #0000001a, 0 1px 2px -1px #0000001a;
  }
  .collapse-title {
    grid-row-start: 1;
    grid-column-start: 1;
    width: 100%;
    min-height: 3.75rem;
    padding: 1rem;
    padding-inline-end: 3rem;
    transition: background-color 0.2s ease-out;
    position: relative;
  }
  .drawer {
    grid-auto-columns: max-content auto;
    width: 100%;
    display: grid;
    position: relative;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .-top-3 {
    top: calc(var(--spacing) * -3);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-24 {
    top: calc(var(--spacing) * 24);
  }
  .top-\[72px\] {
    top: 72px;
  }
  .-right-3 {
    right: calc(var(--spacing) * -3);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-10 {
    bottom: calc(var(--spacing) * 10);
  }
  .bottom-24 {
    bottom: calc(var(--spacing) * 24);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-10 {
    left: calc(var(--spacing) * 10);
  }
  .\!input {
    cursor: text !important;
    border: var(--border) solid transparent !important;
    appearance: none !important;
    background-color: var(--color-base-100) !important;
    vertical-align: middle !important;
    white-space: nowrap !important;
    width: min(20rem, 100%) !important;
    height: var(--size) !important;
    border-color: var(--input-color) !important;
    box-shadow: 0 1px
        color-mix(
          in oklab,
          var(--input-color) calc(var(--depth) * 10%),
          transparent
        )
        inset,
      0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset !important;
    --size: calc(var(--size-field, 0.25rem) * 10) !important;
    --input-color: color-mix(
      in oklab,
      var(--color-base-content) 20%,
      transparent
    ) !important;
    border-start-start-radius: var(--join-ss, var(--radius-field)) !important;
    border-start-end-radius: var(--join-se, var(--radius-field)) !important;
    border-end-end-radius: var(--join-ee, var(--radius-field)) !important;
    border-end-start-radius: var(--join-es, var(--radius-field)) !important;
    flex-shrink: 1 !important;
    align-items: center !important;
    gap: 0.5rem !important;
    padding-inline: 0.75rem !important;
    font-size: 0.875rem !important;
    display: inline-flex !important;
  }
  .\!input:where(input) {
    display: inline-block !important;
  }
  .\!input :where(input) {
    appearance: none !important;
    background-color: #0000 !important;
    border: none !important;
    width: 100% !important;
    height: 100% !important;
    display: inline-block !important;
  }
  .\!input :where(input):focus,
  .\!input :where(input):focus-within {
    outline-offset: 2px !important;
    outline: 2px solid #0000 !important;
  }
  .\!input:focus,
  .\!input:focus-within {
    --input-color: var(--color-base-content) !important;
    box-shadow: 0 1px
      color-mix(
        in oklab,
        var(--input-color) calc(var(--depth) * 10%),
        transparent
      ) !important;
    outline: 2px solid var(--input-color) !important;
    outline-offset: 2px !important;
    isolation: isolate !important;
  }
  .\!input:has(> input[disabled]),
  .\!input:is(:disabled, [disabled]) {
    cursor: not-allowed !important;
    border-color: var(--color-base-200) !important;
    background-color: var(--color-base-200) !important;
    color: color-mix(
      in oklab,
      var(--color-base-content) 40%,
      transparent
    ) !important;
    box-shadow: none !important;
  }
  :is(
      .\!input:has(> input[disabled]),
      .\!input:is(:disabled, [disabled])
    )::placeholder {
    color: color-mix(
      in oklab,
      var(--color-base-content) 20%,
      transparent
    ) !important;
  }
  .\!input:has(> input[disabled]) > input[disabled] {
    cursor: not-allowed !important;
  }
  .\!input::-webkit-date-and-time-value {
    text-align: inherit !important;
  }
  .\!input[type="number"]::-webkit-inner-spin-button {
    margin-block: -0.75rem !important;
    margin-inline-end: -0.75rem !important;
  }
  .input {
    cursor: text;
    border: var(--border) solid transparent;
    appearance: none;
    background-color: var(--color-base-100);
    vertical-align: middle;
    white-space: nowrap;
    width: min(20rem, 100%);
    height: var(--size);
    border-color: var(--input-color);
    box-shadow: 0 1px
        color-mix(
          in oklab,
          var(--input-color) calc(var(--depth) * 10%),
          transparent
        )
        inset,
      0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-field, 0.25rem) * 10);
    --input-color: color-mix(
      in oklab,
      var(--color-base-content) 20%,
      transparent
    );
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    flex-shrink: 1;
    align-items: center;
    gap: 0.5rem;
    padding-inline: 0.75rem;
    font-size: 0.875rem;
    display: inline-flex;
  }
  .input:where(input) {
    display: inline-block;
  }
  .input :where(input) {
    appearance: none;
    background-color: #0000;
    border: none;
    width: 100%;
    height: 100%;
    display: inline-block;
  }
  .input :where(input):focus,
  .input :where(input):focus-within {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
  .input:focus,
  .input:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px
      color-mix(
        in oklab,
        var(--input-color) calc(var(--depth) * 10%),
        transparent
      );
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
  }
  .input:has(> input[disabled]),
  .input:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    box-shadow: none;
  }
  :is(
      .input:has(> input[disabled]),
      .input:is(:disabled, [disabled])
    )::placeholder {
    color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
  }
  .input:has(> input[disabled]) > input[disabled] {
    cursor: not-allowed;
  }
  .input::-webkit-date-and-time-value {
    text-align: inherit;
  }
  .input[type="number"]::-webkit-inner-spin-button {
    margin-block: -0.75rem;
    margin-inline-end: -0.75rem;
  }
  .textarea {
    border: var(--border) solid transparent;
    appearance: none;
    border-radius: var(--radius-field);
    background-color: var(--color-base-100);
    vertical-align: middle;
    border-color: var(--input-color);
    width: min(20rem, 100%);
    min-height: 5rem;
    box-shadow: 0 1px
        color-mix(
          in oklab,
          var(--input-color) calc(var(--depth) * 10%),
          transparent
        )
        inset,
      0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-field, 0.25rem) * 10);
    --input-color: color-mix(
      in oklab,
      var(--color-base-content) 20%,
      transparent
    );
    flex-shrink: 1;
    padding-block: 0.5rem;
    padding-inline: 0.75rem;
    font-size: 0.875rem;
  }
  .textarea textarea {
    appearance: none;
    background-color: #0000;
    border: none;
  }
  .textarea textarea:focus,
  .textarea textarea:focus-within {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
  .textarea:focus,
  .textarea:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px
      color-mix(
        in oklab,
        var(--input-color) calc(var(--depth) * 10%),
        transparent
      );
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
  }
  .textarea:has(> textarea[disabled]),
  .textarea:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    box-shadow: none;
  }
  :is(
      .textarea:has(> textarea[disabled]),
      .textarea:is(:disabled, [disabled])
    )::placeholder {
    color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
  }
  .textarea:has(> textarea[disabled]) > textarea[disabled] {
    cursor: not-allowed;
  }
  .stack {
    grid-template-rows: 3px 4px 1fr 4px 3px;
    grid-template-columns: 3px 4px 1fr 4px 3px;
    display: inline-grid;
  }
  .stack > * {
    width: 100%;
    height: 100%;
  }
  .stack > :not(:first-child) {
    opacity: 0.7;
    width: 100%;
  }
  .stack > :nth-child(2) {
    z-index: 2;
    opacity: 0.9;
  }
  .stack > :first-child {
    z-index: 3;
    width: 100%;
  }
  :is(.stack, .stack.stack-bottom) > * {
    grid-area: 3/3/6/4;
  }
  :is(.stack, .stack.stack-bottom) > :nth-child(2) {
    grid-area: 2/2/5/5;
  }
  :is(.stack, .stack.stack-bottom) > :first-child {
    grid-area: 1/1/4/6;
  }
  .stack.stack-top > * {
    grid-area: 1/3/4/4;
  }
  .stack.stack-top > :nth-child(2) {
    grid-area: 2/2/5/5;
  }
  .stack.stack-top > :first-child {
    grid-area: 3/1/6/6;
  }
  .stack.stack-start > * {
    grid-area: 3/1/4/4;
  }
  .stack.stack-start > :nth-child(2) {
    grid-area: 2/2/5/5;
  }
  .stack.stack-start > :first-child {
    grid-area: 1/3/6/6;
  }
  .stack.stack-end > * {
    grid-area: 3/3/4/6;
  }
  .stack.stack-end > :nth-child(2) {
    grid-area: 2/2/5/5;
  }
  .stack.stack-end > :first-child {
    grid-area: 1/1/6/4;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-30 {
    z-index: 30;
  }
  .z-\[1\] {
    z-index: 1;
  }
  .z-\[2\] {
    z-index: 2;
  }
  .order-last {
    order: calc(infinity);
  }
  .col-span-1 {
    grid-column: span 1 / span 1;
  }
  .modal-box {
    background-color: var(--color-base-100);
    border-top-left-radius: var(--modal-tl, var(--radius-box));
    border-top-right-radius: var(--modal-tr, var(--radius-box));
    border-bottom-left-radius: var(--modal-bl, var(--radius-box));
    border-bottom-right-radius: var(--modal-br, var(--radius-box));
    opacity: 0;
    overscroll-behavior: contain;
    grid-row-start: 1;
    grid-column-start: 1;
    width: 91.6667%;
    max-width: 32rem;
    padding: 1.5rem;
    transition: translate 0.3s ease-out, scale 0.3s ease-out,
      opacity 0.2s ease-out 50ms, box-shadow 0.3s ease-out;
    overflow-y: auto;
    scale: 95%;
    box-shadow: 0 25px 50px -12px #00000040;
  }
  .hero {
    background-position: 50%;
    background-size: cover;
    place-items: center;
    width: 100%;
    display: grid;
  }
  .hero > * {
    grid-row-start: 1;
    grid-column-start: 1;
  }
  .drawer-end {
    grid-auto-columns: auto max-content;
  }
  .drawer-end > .drawer-toggle ~ .drawer-content {
    grid-column-start: 1;
  }
  .drawer-end > .drawer-toggle ~ .drawer-side {
    grid-column-start: 2;
    justify-items: end;
  }
  .drawer-end > .drawer-toggle ~ .drawer-side > :not(.drawer-overlay) {
    translate: 100%;
  }
  [dir="rtl"]
    :is(.drawer-end > .drawer-toggle ~ .drawer-side > :not(.drawer-overlay)) {
    translate: -100%;
  }
  .drawer-end > .drawer-toggle:checked ~ .drawer-side > :not(.drawer-overlay) {
    translate: 0%;
  }
  .container {
    width: 100%;
  }
  @media (width>=40rem) {
    .container {
      max-width: 40rem;
    }
  }
  @media (width>=48rem) {
    .container {
      max-width: 48rem;
    }
  }
  @media (width>=64rem) {
    .container {
      max-width: 64rem;
    }
  }
  @media (width>=80rem) {
    .container {
      max-width: 80rem;
    }
  }
  @media (width>=96rem) {
    .container {
      max-width: 96rem;
    }
  }
  .filter {
    flex-wrap: wrap;
    display: flex;
  }
  .filter input[type="radio"] {
    width: auto;
  }
  .filter input {
    opacity: 1;
    transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s,
      width 0.1s allow-discrete;
    overflow: hidden;
    scale: 1;
  }
  .filter input:not(:last-child) {
    margin-inline-end: 0.25rem;
  }
  .filter input.filter-reset {
    aspect-ratio: 1;
  }
  .filter input.filter-reset:after {
    content: "×";
  }
  .filter:not(:has(input:checked:not(.filter-reset))) .filter-reset,
  .filter:not(:has(input:checked:not(.filter-reset))) input[type="reset"],
  .filter:has(input:checked:not(.filter-reset))
    input:not(:checked, .filter-reset, input[type="reset"]) {
    opacity: 0;
    border-width: 0;
    width: 0;
    margin-inline: 0;
    padding-inline: 0;
    scale: 0;
  }
  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .my-12 {
    margin-block: calc(var(--spacing) * 12);
  }
  .my-auto {
    margin-block: auto;
  }
  .\!input .label {
    height: calc(100% - 0.5rem) !important;
    font-size: inherit !important;
    align-items: center !important;
    padding-inline: 0.75rem !important;
    display: flex !important;
  }
  .\!input .label:first-child {
    border-inline-end: var(--border) solid
      color-mix(in oklab, currentColor 10%, transparent) !important;
    margin-inline: -0.75rem 0.75rem !important;
  }
  .\!input .label:last-child {
    border-inline-start: var(--border) solid
      color-mix(in oklab, currentColor 10%, transparent) !important;
    margin-inline: 0.75rem -0.75rem !important;
  }
  .input .label {
    height: calc(100% - 0.5rem);
    font-size: inherit;
    align-items: center;
    padding-inline: 0.75rem;
    display: flex;
  }
  .input .label:first-child {
    border-inline-end: var(--border) solid
      color-mix(in oklab, currentColor 10%, transparent);
    margin-inline: -0.75rem 0.75rem;
  }
  .input .label:last-child {
    border-inline-start: var(--border) solid
      color-mix(in oklab, currentColor 10%, transparent);
    margin-inline: 0.75rem -0.75rem;
  }
  .select .label {
    height: calc(100% - 0.5rem);
    font-size: inherit;
    align-items: center;
    padding-inline: 0.75rem;
    display: flex;
  }
  .select .label:first-child {
    border-inline-end: var(--border) solid
      color-mix(in oklab, currentColor 10%, transparent);
    margin-inline: -0.75rem 0.75rem;
  }
  .select .label:last-child {
    border-inline-start: var(--border) solid
      color-mix(in oklab, currentColor 10%, transparent);
    margin-inline: 0.75rem -0.75rem;
  }
  .prose {
    color: var(--tw-prose-body);
    --tw-prose-body: oklch(0.373 0.034 259.733);
    --tw-prose-headings: oklch(0.21 0.034 264.665);
    --tw-prose-lead: oklch(0.446 0.03 256.802);
    --tw-prose-links: oklch(0.21 0.034 264.665);
    --tw-prose-bold: oklch(0.21 0.034 264.665);
    --tw-prose-counters: oklch(0.551 0.027 264.364);
    --tw-prose-bullets: oklch(0.872 0.01 258.338);
    --tw-prose-hr: oklch(0.928 0.006 264.531);
    --tw-prose-quotes: oklch(0.21 0.034 264.665);
    --tw-prose-quote-borders: oklch(0.928 0.006 264.531);
    --tw-prose-captions: oklch(0.551 0.027 264.364);
    --tw-prose-kbd: oklch(0.21 0.034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.21 0.034 264.665);
    --tw-prose-pre-code: oklch(0.928 0.006 264.531);
    --tw-prose-pre-bg: oklch(0.278 0.033 256.848);
    --tw-prose-th-borders: oklch(0.872 0.01 258.338);
    --tw-prose-td-borders: oklch(0.928 0.006 264.531);
    --tw-prose-invert-body: oklch(0.872 0.01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.707 0.022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.707 0.022 261.325);
    --tw-prose-invert-bullets: oklch(0.446 0.03 256.802);
    --tw-prose-invert-hr: oklch(0.373 0.034 259.733);
    --tw-prose-invert-quotes: oklch(0.967 0.003 264.542);
    --tw-prose-invert-quote-borders: oklch(0.373 0.034 259.733);
    --tw-prose-invert-captions: oklch(0.707 0.022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.872 0.01 258.338);
    --tw-prose-invert-pre-bg: #00000080;
    --tw-prose-invert-th-borders: oklch(0.446 0.03 256.802);
    --tw-prose-invert-td-borders: oklch(0.373 0.034 259.733);
    max-width: 65ch;
    font-size: 1rem;
    line-height: 1.75;
  }
  .prose :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .prose
    :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: var(--tw-prose-lead);
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    font-size: 1.25em;
    line-height: 1.6;
  }
  .prose :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-links);
    font-weight: 500;
    text-decoration: underline;
  }
  .prose
    :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600;
  }
  .prose
    :where(a strong):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose
    :where(blockquote strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ),
  .prose
    :where(thead th strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
  }
  .prose :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
    list-style-type: decimal;
  }
  .prose
    :where(ol[type="A"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-alpha;
  }
  .prose
    :where(ol[type="a"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-alpha;
  }
  .prose
    :where(ol[type="A s"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-alpha;
  }
  .prose
    :where(ol[type="a s"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-alpha;
  }
  .prose
    :where(ol[type="I"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-roman;
  }
  .prose
    :where(ol[type="i"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-roman;
  }
  .prose
    :where(ol[type="I s"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-roman;
  }
  .prose
    :where(ol[type="i s"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-roman;
  }
  .prose
    :where(ol[type="1"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: decimal;
  }
  .prose :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
    list-style-type: disc;
  }
  .prose
    :where(ol > li):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::marker {
    color: var(--tw-prose-counters);
    font-weight: 400;
  }
  .prose
    :where(ul > li):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::marker {
    color: var(--tw-prose-bullets);
  }
  .prose :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.25em;
    font-weight: 600;
  }
  .prose :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
  }
  .prose
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: var(--tw-prose-quotes);
    border-inline-start-width: 0.25rem;
    border-inline-start-color: var(--tw-prose-quote-borders);
    quotes: "“" "”" "‘" "’";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1em;
    font-style: italic;
    font-weight: 500;
  }
  .prose
    :where(blockquote p:first-of-type):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):before {
    content: open-quote;
  }
  .prose
    :where(blockquote p:last-of-type):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):after {
    content: close-quote;
  }
  .prose :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    margin-top: 0;
    margin-bottom: 0.888889em;
    font-size: 2.25em;
    font-weight: 800;
    line-height: 1.11111;
  }
  .prose
    :where(h1 strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
    font-weight: 900;
  }
  .prose :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    margin-top: 2em;
    margin-bottom: 1em;
    font-size: 1.5em;
    font-weight: 700;
    line-height: 1.33333;
  }
  .prose
    :where(h2 strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
    font-weight: 800;
  }
  .prose :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    font-size: 1.25em;
    font-weight: 600;
    line-height: 1.6;
  }
  .prose
    :where(h3 strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
    font-weight: 700;
  }
  .prose :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    font-weight: 600;
    line-height: 1.5;
  }
  .prose
    :where(h4 strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
    font-weight: 700;
  }
  .prose :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose
    :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
    display: block;
  }
  .prose
    :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-kbd);
    box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
      0 3px rgb(var(--tw-prose-kbd-shadows) / 10%);
    padding-top: 0.1875em;
    padding-inline-end: 0.375em;
    padding-bottom: 0.1875em;
    border-radius: 0.3125rem;
    padding-inline-start: 0.375em;
    font-family: inherit;
    font-size: 0.875em;
    font-weight: 500;
  }
  .prose
    :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-code);
    font-size: 0.875em;
    font-weight: 600;
  }
  .prose
    :where(code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):before,
  .prose
    :where(code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):after {
    content: "`";
  }
  .prose
    :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose
    :where(h1 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }
  .prose
    :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: 0.875em;
  }
  .prose
    :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: 0.9em;
  }
  .prose
    :where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose
    :where(blockquote code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ),
  .prose
    :where(thead th code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
  }
  .prose :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    padding-top: 0.857143em;
    padding-inline-end: 1.14286em;
    padding-bottom: 0.857143em;
    border-radius: 0.375rem;
    margin-top: 1.71429em;
    margin-bottom: 1.71429em;
    padding-inline-start: 1.14286em;
    font-size: 0.875em;
    font-weight: 400;
    line-height: 1.71429;
    overflow-x: auto;
  }
  .prose
    :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
    background-color: #0000;
    border-width: 0;
    border-radius: 0;
    padding: 0;
  }
  .prose
    :where(pre code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):before,
  .prose
    :where(pre code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):after {
    content: none;
  }
  .prose
    :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    table-layout: auto;
    text-align: start;
    width: 100%;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.71429;
  }
  .prose
    :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }
  .prose
    :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    vertical-align: bottom;
    padding-inline-end: 0.571429em;
    padding-bottom: 0.571429em;
    padding-inline-start: 0.571429em;
    font-weight: 600;
  }
  .prose
    :where(tbody tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
  }
  .prose
    :where(tbody tr:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    border-bottom-width: 0;
  }
  .prose
    :where(tbody td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: baseline;
  }
  .prose
    :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
  }
  .prose
    :where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: top;
  }
  .prose
    :where(figure > *):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose
    :where(figcaption):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: var(--tw-prose-captions);
    margin-top: 0.857143em;
    font-size: 0.875em;
    line-height: 1.42857;
  }
  .prose
    :where(picture > img):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  .prose
    :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose
    :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0.375em;
  }
  .prose
    :where(.prose > ul > li p):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .prose
    :where(.prose > ul > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.25em;
  }
  .prose
    :where(.prose > ul > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.25em;
  }
  .prose
    :where(.prose > ol > li > p:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.25em;
  }
  .prose
    :where(.prose > ol > li > p:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.25em;
  }
  .prose
    :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .prose :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .prose :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.5em;
    padding-inline-start: 1.625em;
  }
  .prose
    :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose
    :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose
    :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)),
  .prose
    :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  .prose
    :where(thead th:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  .prose
    :where(thead th:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  .prose
    :where(tbody td, tfoot td):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-top: 0.571429em;
    padding-inline-end: 0.571429em;
    padding-bottom: 0.571429em;
    padding-inline-start: 0.571429em;
  }
  .prose
    :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-start: 0;
  }
  .prose
    :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-inline-end: 0;
  }
  .prose
    :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose
    :where(.prose > :first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
  }
  .prose
    :where(.prose > :last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 0;
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-24 {
    margin-top: calc(var(--spacing) * 24);
  }
  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .-mb-4 {
    margin-bottom: calc(var(--spacing) * -4);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .mb-14 {
    margin-bottom: calc(var(--spacing) * 14);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .alert {
    border-radius: var(--radius-box);
    width: 100%;
    color: var(--color-base-content);
    background-color: var(--alert-color, var(--color-base-200));
    text-align: start;
    border: var(--border) solid var(--color-base-200);
    background-size: calc(var(--noise) * 1000px);
    box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset,
      0 1px
        color-mix(
          in oklab,
          color-mix(
              in oklab,
              black 20%,
              var(--alert-color, var(--color-base-200))
            )
            calc(var(--depth) * 20%),
          transparent
        ),
      0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
    grid-template-columns: auto minmax(auto, 1fr);
    grid-auto-flow: column;
    justify-content: start;
    place-items: center start;
    gap: 1rem;
    padding-block: 0.75rem;
    padding-inline: 1rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    display: grid;
  }
  .alert.alert-outline {
    color: var(--alert-color);
    box-shadow: none;
    background-color: #0000;
    background-image: none;
  }
  .alert.alert-dash {
    color: var(--alert-color);
    box-shadow: none;
    background-color: #0000;
    background-image: none;
    border-style: dashed;
  }
  .alert.alert-soft {
    color: var(--alert-color, var(--color-base-content));
    background: color-mix(
      in oklab,
      var(--alert-color, var(--color-base-content)) 8%,
      var(--color-base-100)
    );
    border-color: color-mix(
      in oklab,
      var(--alert-color, var(--color-base-content)) 10%,
      var(--color-base-100)
    );
    box-shadow: none;
    background-image: none;
  }
  .status {
    aspect-ratio: 1;
    border-radius: var(--radius-selector);
    background-color: color-mix(
      in oklab,
      var(--color-base-content) 20%,
      transparent
    );
    vertical-align: middle;
    width: 0.5rem;
    height: 0.5rem;
    color: color-mix(in oklab, var(--color-black) 30%, transparent);
    background-position: 50%;
    background-repeat: no-repeat;
    background-image: radial-gradient(
      circle at 35% 30%,
      oklch(1 0 0 / calc(var(--depth) * 0.5)),
      transparent
    );
    box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor
          calc(var(--depth) * 100%), transparent);
    display: inline-block;
  }
  .footer {
    grid-auto-flow: row;
    place-items: start;
    gap: 2.5rem 1rem;
    width: 100%;
    font-size: 0.875rem;
    line-height: 1.25rem;
    display: grid;
  }
  .footer > * {
    place-items: start;
    gap: 0.5rem;
    display: grid;
  }
  .footer.footer-center {
    text-align: center;
    grid-auto-flow: column dense;
    place-items: center;
  }
  .footer.footer-center > * {
    place-items: center;
  }
  .hero-content {
    justify-content: center;
    align-items: center;
    gap: 1rem;
    max-width: 80rem;
    padding: 1rem;
    display: flex;
  }
  .join {
    --join-ss: 0;
    --join-se: 0;
    --join-es: 0;
    --join-ee: 0;
    align-items: stretch;
    display: inline-flex;
  }
  .join :where(.join-item) {
    border-start-start-radius: var(--join-ss, 0);
    border-start-end-radius: var(--join-se, 0);
    border-end-end-radius: var(--join-ee, 0);
    border-end-start-radius: var(--join-es, 0);
  }
  .join > .join-item:where(:first-child),
  .join :first-child:not(:last-child) :where(.join-item) {
    --join-ss: var(--radius-field);
    --join-se: 0;
    --join-es: var(--radius-field);
    --join-ee: 0;
  }
  .join > .join-item:where(:last-child),
  .join :last-child:not(:first-child) :where(.join-item) {
    --join-ss: 0;
    --join-se: var(--radius-field);
    --join-es: 0;
    --join-ee: var(--radius-field);
  }
  .stat {
    grid-template-columns: repeat(1, 1fr);
    column-gap: 1rem;
    width: 100%;
    padding-block: 1rem;
    padding-inline: 1.5rem;
    display: inline-grid;
  }
  .stat:not(:last-child) {
    border-inline-end: var(--border) dashed
      color-mix(in oklab, currentColor 10%, transparent);
    border-block-end: none;
  }
  .label {
    color: color-mix(in oklab, currentColor 60%, transparent);
    align-items: center;
    gap: 0.375rem;
    display: inline-flex;
  }
  .label:has(input) {
    cursor: pointer;
  }
  .navbar {
    align-items: center;
    width: 100%;
    min-height: 4rem;
    padding: 0.5rem;
    display: flex;
  }
  .navbar-end {
    justify-content: flex-end;
    align-items: center;
    width: 50%;
    display: inline-flex;
  }
  .navbar-start {
    justify-content: flex-start;
    align-items: center;
    width: 50%;
    display: inline-flex;
  }
  .chat {
    column-gap: 0.75rem;
    padding-block: 0.25rem;
    display: grid;
  }
  .navbar-center {
    flex-shrink: 0;
    align-items: center;
    display: inline-flex;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-\[3px\] {
    height: 3px;
  }
  .h-\[25px\] {
    height: 25px;
  }
  .h-\[28px\] {
    height: 28px;
  }
  .h-\[29px\] {
    height: 29px;
  }
  .h-\[43px\] {
    height: 43px;
  }
  .h-\[50px\] {
    height: 50px;
  }
  .h-\[200px\] {
    height: 200px;
  }
  .h-auto {
    height: auto;
  }
  .max-h-full {
    max-height: 100%;
  }
  .min-h-\[200px\] {
    min-height: 200px;
  }
  .min-h-full {
    min-height: 100%;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-24 {
    width: calc(var(--spacing) * 24);
  }
  .w-28 {
    width: calc(var(--spacing) * 28);
  }
  .w-52 {
    width: calc(var(--spacing) * 52);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-\[25px\] {
    width: 25px;
  }
  .w-\[28px\] {
    width: 28px;
  }
  .w-\[40px\] {
    width: 40px;
  }
  .w-\[50px\] {
    width: 50px;
  }
  .w-\[100\%\],
  .w-full {
    width: 100%;
  }
  .w-min {
    width: min-content;
  }
  .max-w-\[40ch\] {
    max-width: 40ch;
  }
  .max-w-\[70vw\] {
    max-width: 70vw;
  }
  .max-w-\[720px\] {
    max-width: 720px;
  }
  .max-w-\[850px\] {
    max-width: 850px;
  }
  .max-w-\[968px\] {
    max-width: 968px;
  }
  .max-w-\[1100px\] {
    max-width: 1100px;
  }
  .min-w-full {
    min-width: 100%;
  }
  .flex-auto {
    flex: auto;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .\!transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z)
      var(--tw-skew-x) var(--tw-skew-y) !important;
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z)
      var(--tw-skew-x) var(--tw-skew-y);
  }
  .link {
    cursor: pointer;
    text-decoration-line: underline;
  }
  .link:focus {
    outline-offset: 2px;
    outline: 2px solid #0000;
  }
  .link:focus-visible {
    outline-offset: 2px;
    outline: 2px solid;
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-\[auto\,14px\] {
    grid-template-columns: auto, 14px;
  }
  .grid-rows-12 {
    grid-template-rows: repeat(12, minmax(0, 1fr));
  }
  .grid-rows-\[auto\,max-content\] {
    grid-template-rows: auto, max-content;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-around {
    justify-content: space-around;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .justify-items-center {
    justify-items: center;
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }
  .gap-x-4 {
    column-gap: calc(var(--spacing) * 4);
  }
  .gap-x-48 {
    column-gap: calc(var(--spacing) * 48);
  }
  :where(.space-y-1 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 1) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 2) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 4) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  .gap-y-1 {
    row-gap: calc(var(--spacing) * 1);
  }
  .gap-y-12 {
    row-gap: calc(var(--spacing) * 12);
  }
  :where(.space-x-1 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(
      calc(var(--spacing) * 1) * var(--tw-space-x-reverse)
    );
    margin-inline-end: calc(
      calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse))
    );
  }
  :where(.space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(
      calc(var(--spacing) * 2) * var(--tw-space-x-reverse)
    );
    margin-inline-end: calc(
      calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse))
    );
  }
  :where(.space-x-4 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(
      calc(var(--spacing) * 4) * var(--tw-space-x-reverse)
    );
    margin-inline-end: calc(
      calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse))
    );
  }
  :where(.divide-y-1 > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
  .self-center {
    align-self: center;
  }
  .self-end {
    align-self: flex-end;
  }
  .self-start {
    align-self: flex-start;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-full {
    border-radius: 3.40282e38px;
  }
  .rounded-none {
    border-radius: 0;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .alert-success {
    border-color: var(--color-success);
    color: var(--color-success-content);
    --alert-color: var(--color-success);
  }
  .border-accent {
    border-color: var(--color-accent);
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-primary {
    border-color: var(--color-primary);
  }
  .border-secondary {
    border-color: var(--color-secondary);
  }
  .border-b-accent {
    border-bottom-color: var(--color-accent);
  }
  .border-b-gray-300 {
    border-bottom-color: var(--color-gray-300);
  }
  .border-b-primary {
    border-bottom-color: var(--color-primary);
  }
  .bg-accent {
    background-color: var(--color-accent);
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-secondary {
    background-color: var(--color-secondary);
  }
  .bg-transparent {
    background-color: #0000;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .fill-accent {
    fill: var(--color-accent);
  }
  .fill-black {
    fill: var(--color-black);
  }
  .fill-primary {
    fill: var(--color-primary);
  }
  .fill-secondary {
    fill: var(--color-secondary);
  }
  .stroke-accent {
    stroke: var(--color-accent);
  }
  .stroke-black {
    stroke: var(--color-black);
  }
  .stroke-primary {
    stroke: var(--color-primary);
  }
  .object-contain {
    object-fit: contain;
  }
  .object-cover {
    object-fit: cover;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pt-16 {
    padding-top: calc(var(--spacing) * 16);
  }
  .pt-\[132px\] {
    padding-top: 132px;
  }
  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .pb-16 {
    padding-bottom: calc(var(--spacing) * 16);
  }
  .pl-0 {
    padding-left: calc(var(--spacing) * 0);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-start {
    text-align: start;
  }
  .font-mixofont {
    font-family: var(--font-mixofont);
  }
  .font-nunito {
    font-family: var(--font-nunito);
  }
  .font-sans-serif {
    font-family: sans-serif;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[16px\] {
    font-size: 16px;
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .font-\[900\] {
    --tw-font-weight: 900;
    font-weight: 900;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .overflow-ellipsis {
    text-overflow: ellipsis;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .whitespace-pre-line {
    white-space: pre-line;
  }
  .checkbox-secondary {
    color: var(--color-secondary-content);
    --input-color: var(--color-secondary);
  }
  .text-accent {
    color: var(--color-accent);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-secondary {
    color: var(--color-secondary);
  }
  .text-white {
    color: var(--color-white);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .opacity-25 {
    opacity: 0.25;
  }
  .opacity-75 {
    opacity: 0.75;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a),
      0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a),
      0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a),
      0 8px 10px -6px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .filter {
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
      var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
      var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via,
      --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate,
      filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via,
      --tw-gradient-to;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-150 {
    --tw-duration: 0.15s;
    transition-duration: 0.15s;
  }
  .duration-300 {
    --tw-duration: 0.3s;
    transition-duration: 0.3s;
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  :root .prose {
    --tw-prose-body: color-mix(
      in oklab,
      var(--color-base-content) 80%,
      transparent
    );
    --tw-prose-headings: var(--color-base-content);
    --tw-prose-lead: var(--color-base-content);
    --tw-prose-links: var(--color-base-content);
    --tw-prose-bold: var(--color-base-content);
    --tw-prose-counters: var(--color-base-content);
    --tw-prose-bullets: color-mix(
      in oklab,
      var(--color-base-content) 50%,
      transparent
    );
    --tw-prose-hr: color-mix(
      in oklab,
      var(--color-base-content) 20%,
      transparent
    );
    --tw-prose-quotes: var(--color-base-content);
    --tw-prose-quote-borders: color-mix(
      in oklab,
      var(--color-base-content) 20%,
      transparent
    );
    --tw-prose-captions: color-mix(
      in oklab,
      var(--color-base-content) 50%,
      transparent
    );
    --tw-prose-code: var(--color-base-content);
    --tw-prose-pre-code: var(--color-neutral-content);
    --tw-prose-pre-bg: var(--color-neutral);
    --tw-prose-th-borders: color-mix(
      in oklab,
      var(--color-base-content) 50%,
      transparent
    );
    --tw-prose-td-borders: color-mix(
      in oklab,
      var(--color-base-content) 20%,
      transparent
    );
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  @media (hover: hover) {
    .group-hover\/item\:bg-secondary:is(:where(.group\/item):hover *) {
      background-color: var(--color-secondary);
    }
    .hover\:bg-green-600:hover {
      background-color: var(--color-green-600);
    }
    .hover\:bg-primary:hover {
      background-color: var(--color-primary);
    }
    .hover\:bg-secondary:hover {
      background-color: var(--color-secondary);
    }
    .hover\:text-accent:hover {
      color: var(--color-accent);
    }
    .hover\:text-primary:hover {
      color: var(--color-primary);
    }
  }
  .focus\:\!bg-secondary:focus {
    background-color: var(--color-secondary) !important;
  }
  .focus\:bg-secondary:focus {
    background-color: var(--color-secondary);
  }
  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (width>=40rem) {
    .sm\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  @media (width>=48rem) {
    .md\:fixed {
      position: fixed;
    }
    .md\:mx-auto {
      margin-inline: auto;
    }
    .md\:mt-0 {
      margin-top: calc(var(--spacing) * 0);
    }
    .md\:ml-12 {
      margin-left: calc(var(--spacing) * 12);
    }
    .md\:flex {
      display: flex;
    }
    .md\:hidden {
      display: none;
    }
    .md\:h-56 {
      height: calc(var(--spacing) * 56);
    }
    .md\:w-1\/3 {
      width: 33.3333%;
    }
    .md\:w-3\/5,
    .md\:w-\[60\%\] {
      width: 60%;
    }
    .md\:w-\[75\%\] {
      width: 75%;
    }
    .md\:min-w-\[280px\] {
      min-width: 280px;
    }
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    .md\:flex-row {
      flex-direction: row;
    }
    .md\:items-center {
      align-items: center;
    }
    .md\:justify-between {
      justify-content: space-between;
    }
    .md\:gap-4 {
      gap: calc(var(--spacing) * 4);
    }
    :where(.md\:space-x-4 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(
        calc(var(--spacing) * 4) * var(--tw-space-x-reverse)
      );
      margin-inline-end: calc(
        calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse))
      );
    }
    :where(.md\:space-x-12 > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(
        calc(var(--spacing) * 12) * var(--tw-space-x-reverse)
      );
      margin-inline-end: calc(
        calc(var(--spacing) * 12) * calc(1 - var(--tw-space-x-reverse))
      );
    }
    .md\:p-4 {
      padding: calc(var(--spacing) * 4);
    }
    .md\:p-6 {
      padding: calc(var(--spacing) * 6);
    }
    .md\:px-4 {
      padding-inline: calc(var(--spacing) * 4);
    }
    .md\:px-8 {
      padding-inline: calc(var(--spacing) * 8);
    }
    .md\:px-12 {
      padding-inline: calc(var(--spacing) * 12);
    }
    .md\:py-6 {
      padding-block: calc(var(--spacing) * 6);
    }
    .md\:text-2xl {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    .md\:text-7xl {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
    .md\:text-lg {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  @media (width>=64rem) {
    .lg\:sticky {
      position: sticky;
    }
    .lg\:-right-\[75px\] {
      right: -75px;
    }
    .lg\:-left-\[75px\] {
      left: -75px;
    }
    .lg\:mr-4 {
      margin-right: calc(var(--spacing) * 4);
    }
    .lg\:flex {
      display: flex;
    }
    .lg\:h-\[50px\] {
      height: 50px;
    }
    .lg\:w-\[40\%\] {
      width: 40%;
    }
    .lg\:w-\[50px\] {
      width: 50px;
    }
    .lg\:w-\[100px\] {
      width: 100px;
    }
    .lg\:max-w-\[1150px\] {
      max-width: 1150px;
    }
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    .lg\:grid-cols-5 {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
    .lg\:pb-28 {
      padding-bottom: calc(var(--spacing) * 28);
    }
    .lg\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
    .lg\:text-6xl {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
    .lg\:leading-snug {
      --tw-leading: var(--leading-snug);
      line-height: var(--leading-snug);
    }
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
.hamburger div {
  transition: transform 0.5s;
  transform-origin: 100%;
}
:root {
  --swiper-theme-color: #007aff;
}
.swiper {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  z-index: 1;
  display: block;
}
.swiper-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: flex;
  transition-property: transform;
  transition-timing-function: var(
    --swiper-wrapper-transition-timing-function,
    initial
  );
  box-sizing: content-box;
}
.swiper-wrapper {
  transform: translateZ(0);
}
.swiper-slide {
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  position: relative;
  transition-property: transform;
  display: block;
}
:root {
  --swiper-navigation-size: 44px;
}
astro-island {
  display: contents;
}
